// SPDX-License-Identifier: MPL-2.0
#include "instructions.hpp"
#include "libchata.hpp"
#include <array>
#include <cstdint>
#include <initializer_list>
#include <string_view>

namespace libchata_internal {

using enum RVInstructionFormat;
using enum RVInstructionID;
using enum RVInstructionSet;
using std::nullopt;

const std::array<rvinstruction, 1039> instructions = {{
        {"lui", LUI, U, 0b0110111, 0b000, RV32I, 4},
        {"auipc", AUIPC, U, 0b0010111, 0b000, RV32I, 4},
        {"jal", JAL, J, 0b1101111, 0b000, RV32I, 4},
        {"jalr", JALR, I, 0b1100111, 0b000, RV32I, 4},
        {"beq", BEQ, Branch, 0b1100011, 0b000, RV32I, 4},
        {"bne", BNE, Branch, 0b1100011, 0b001, RV32I, 4},
        {"blt", BLT, Branch, 0b1100011, 0b001, RV32I, 4},
        {"bge", BGE, Branch, 0b1100011, 0b100, RV32I, 4},
        {"bltu", BLTU, Branch, 0b1100011, 0b101, RV32I, 4},
        {"bgeu", BGEU, Branch, 0b1100011, 0b110, RV32I, 4},
        {"lb", LB, I, 0b0000011, 0b000, RV32I, 4},
        {"lh", LH, I, 0b0000011, 0b001, RV32I, 4},
        {"lw", LW, I, 0b0000011, 0b010, RV32I, 4},
        {"lbu", LBU, I, 0b0000011, 0b100, RV32I, 4},
        {"lhu", LHU, I, 0b0000011, 0b101, RV32I, 4},
        {"sb", SB, S, 0b0100011, 0b000, RV32I, 4},
        {"sh", SH, S, 0b0100011, 0b001, RV32I, 4},
        {"sw", SW, S, 0b0100011, 0b010, RV32I, 4},
        {"addi", ADDI, I, 0b0010011, 0b000, RV32I, 4},
        {"slti", SLTI, I, 0b0010011, 0b010, RV32I, 4},
        {"sltiu", SLTIU, I, 0b0010011, 0b011, RV32I, 4},
        {"xori", XORI, I, 0b0010011, 0b100, RV32I, 4},
        {"ori", ORI, I, 0b0010011, 0b110, RV32I, 4},
        {"andi", ANDI, I, 0b0010011, 0b111, RV32I, 4},
        {"slli", SLLI, R, 0b0010011, 0b0000000001, RV32I, 4, {.use_imm_for_rs2 = true}},
        {"srli", SRLI, R, 0b0010011, 0b0000000101, RV32I, 4, {.use_imm_for_rs2 = true}},
        {"srai", SRAI, R, 0b0010011, 0b0100000101, RV32I, 4, {.use_imm_for_rs2 = true}},
        {"add", ADD, R, 0b0110011, 0b0000000000, RV32I, 4},
        {"sub", SUB, R, 0b0110011, 0b0100000000, RV32I, 4},
        {"sll", SLL, R, 0b0110011, 0b0000000001, RV32I, 4},
        {"slt", SLT, R, 0b0110011, 0b0000000010, RV32I, 4},
        {"sltu", SLTU, R, 0b0110011, 0b0000000011, RV32I, 4},
        {"xor", XOR, R, 0b0110011, 0b0000000100, RV32I, 4},
        {"srl", SRL, R, 0b0110011, 0b0000000101, RV32I, 4},
        {"sra", SRA, R, 0b0110011, 0b0100000101, RV32I, 4},
        {"or", OR, R, 0b0110011, 0b0000000110, RV32I, 4},
        {"and", AND, R, 0b0110011, 0b0000000111, RV32I, 4},
        {"fence", FENCE, I, 0b0001111, 0b000, RV32I, 4, {.super_special_snowflake = true}},
        {"fence.tso", FENCETSO, I, 0b0001111, 0b000, RV32I, 4, {.super_special_snowflake = true}},
        {"pause", PAUSE, I, 0b0001111, 0b000, RV32I, 4, {.super_special_snowflake = true}},
        {"ecall", ECALL, I, 0b1110011, 0b000, RV32I, 4, {.super_special_snowflake = true}},
        {"ebreak", EBREAK, I, 0b1110011, 0b000, RV32I, 4, {.super_special_snowflake = true}},
        {"lwu", LWU, I, 0b0000011, 0b110, RV64I, 4},
        {"ld", LD, I, 0b0000011, 0b011, RV64I, 4},
        {"sd", SD, S, 0b0100011, 0b011, RV64I, 4},
        {"addiw", ADDIW, I, 0b0011011, 0b0000000000, RV64I, 4},
        {"slliw", SLLIW, R, 0b0011011, 0b0000000001, RV64I, 4, {.use_imm_for_rs2 = true}},
        {"srliw", SRLIW, R, 0b0011011, 0b0000000101, RV64I, 4, {.use_imm_for_rs2 = true}},
        {"sraiw", SRAIW, R, 0b0011011, 0b0100000101, RV64I, 4, {.use_imm_for_rs2 = true}},
        {"addw", ADDW, R, 0b0111011, 0b0000000000, RV64I, 4},
        {"subw", SUBW, R, 0b0111011, 0b0100000000, RV64I, 4},
        {"sllw", SLLW, R, 0b0111011, 0b0000000001, RV64I, 4},
        {"srlw", SRLW, R, 0b0111011, 0b0000000101, RV64I, 4},
        {"sraw", SRAW, R, 0b0111011, 0b0100000101, RV64I, 4},
        {"mul", MUL, R, 0b0110011, 0b0000001000, RV32M, 4},
        {"mulh", MULH, R, 0b0110011, 0b0000001001, RV32M, 4},
        {"mulhsu", MULHSU, R, 0b0110011, 0b0000001010, RV32M, 4},
        {"mulhu", MULHU, R, 0b0110011, 0b0000001011, RV32M, 4},
        {"div", DIV, R, 0b0110011, 0b0000001100, RV32M, 4},
        {"divu", DIVU, R, 0b0110011, 0b0000001101, RV32M, 4},
        {"rem", REM, R, 0b0110011, 0b0000001110, RV32M, 4},
        {"remu", REMU, R, 0b0110011, 0b0000001111, RV32M, 4},
        {"mulw", MULW, R, 0b0111011, 0b0000001000, RV64M, 4},
        {"divw", DIVW, R, 0b0111011, 0b0000001100, RV64M, 4},
        {"divuw", DIVUW, R, 0b0111011, 0b0000001101, RV64M, 4},
        {"remw", REMW, R, 0b0111011, 0b0000001110, RV64M, 4},
        {"remuw", REMUW, R, 0b0111011, 0b0000001111, RV64M, 4},
        {"lr.w", LRW, R, 0b0101111, 0b0001000010, RV32A, 4, {.custom_reg_val = 0b00000}},
        {"sc.w", SCW, R, 0b0101111, 0b0001100010, RV32A, 4},
        {"lr.w.aq", LRWAQ, R, 0b0101111, 0b0001010010, RV32A, 4, {.custom_reg_val = 0b00000}},
        {"sc.w.aq", SCWAQ, R, 0b0101111, 0b0001110010, RV32A, 4},
        {"lr.w.rl", LRWRL, R, 0b0101111, 0b0001001010, RV32A, 4, {.custom_reg_val = 0b00000}},
        {"sc.w.rl", SCWRL, R, 0b0101111, 0b0001101010, RV32A, 4},
        {"lr.w.aqrl", LRWAQRL, R, 0b0101111, 0b0001011010, RV32A, 4, {.custom_reg_val = 0b00000}},
        {"sc.w.aqrl", SCWAQRL, R, 0b0101111, 0b0001111010, RV32A, 4},
        {"amoswap.w", AMOSWAPW, R, 0b0101111, 0b0000100010, RV32A, 4},
        {"amoadd.w", AMOADDW, R, 0b0101111, 0b0000000010, RV32A, 4},
        {"amoxor.w", AMOXORW, R, 0b0101111, 0b0010000010, RV32A, 4},
        {"amoand.w", AMOANDW, R, 0b0101111, 0b0110000010, RV32A, 4},
        {"amoor.w", AMOORW, R, 0b0101111, 0b0100000010, RV32A, 4},
        {"amomin.w", AMOMINW, R, 0b0101111, 0b1000000010, RV32A, 4},
        {"amomax.w", AMOMAXW, R, 0b0101111, 0b1010000010, RV32A, 4},
        {"amominu.w", AMOMINUW, R, 0b0101111, 0b1100000010, RV32A, 4},
        {"amomaxu.w", AMOMAXUW, R, 0b0101111, 0b1110000010, RV32A, 4},
        {"amoswap.w.aq", AMOSWAPWAQ, R, 0b0101111, 0b0000110010, RV32A, 4},
        {"amoadd.w.aq", AMOADDWAQ, R, 0b0101111, 0b0000010010, RV32A, 4},
        {"amoxor.w.aq", AMOXORWAQ, R, 0b0101111, 0b0010010010, RV32A, 4},
        {"amoand.w.aq", AMOANDWAQ, R, 0b0101111, 0b0110010010, RV32A, 4},
        {"amoor.w.aq", AMOORWAQ, R, 0b0101111, 0b0100010010, RV32A, 4},
        {"amomin.w.aq", AMOMINWAQ, R, 0b0101111, 0b1000010010, RV32A, 4},
        {"amomax.w.aq", AMOMAXWAQ, R, 0b0101111, 0b1010010010, RV32A, 4},
        {"amominu.w.aq", AMOMINUWAQ, R, 0b0101111, 0b1100010010, RV32A, 4},
        {"amomaxu.w.aq", AMOMAXUWAQ, R, 0b0101111, 0b1110010010, RV32A, 4},
        {"amoswap.w.rl", AMOSWAPWRL, R, 0b0101111, 0b0000101010, RV32A, 4},
        {"amoadd.w.rl", AMOADDWRL, R, 0b0101111, 0b0000001010, RV32A, 4},
        {"amoxor.w.rl", AMOXORWRL, R, 0b0101111, 0b0010001010, RV32A, 4},
        {"amoand.w.rl", AMOANDWRL, R, 0b0101111, 0b0110001010, RV32A, 4},
        {"amoor.w.rl", AMOORWRL, R, 0b0101111, 0b0100001010, RV32A, 4},
        {"amomin.w.rl", AMOMINWRL, R, 0b0101111, 0b1000001010, RV32A, 4},
        {"amomax.w.rl", AMOMAXWRL, R, 0b0101111, 0b1010001010, RV32A, 4},
        {"amominu.w.rl", AMOMINUWRL, R, 0b0101111, 0b1100001010, RV32A, 4},
        {"amomaxu.w.rl", AMOMAXUWRL, R, 0b0101111, 0b1110001010, RV32A, 4},
        {"amoswap.w.aqrl", AMOSWAPWAQRL, R, 0b0101111, 0b0000111010, RV32A, 4},
        {"amoadd.w.aqrl", AMOADDWAQRL, R, 0b0101111, 0b0000011010, RV32A, 4},
        {"amoxor.w.aqrl", AMOXORWAQRL, R, 0b0101111, 0b0010011010, RV32A, 4},
        {"amoand.w.aqrl", AMOANDWAQRL, R, 0b0101111, 0b0110011010, RV32A, 4},
        {"amoor.w.aqrl", AMOORWAQRL, R, 0b0101111, 0b0100011010, RV32A, 4},
        {"amomin.w.aqrl", AMOMINWAQRL, R, 0b0101111, 0b1000011010, RV32A, 4},
        {"amomax.w.aqrl", AMOMAXWAQRL, R, 0b0101111, 0b1010011010, RV32A, 4},
        {"amominu.w.aqrl", AMOMINUWAQRL, R, 0b0101111, 0b1100011010, RV32A, 4},
        {"amomaxu.w.aqrl", AMOMAXUWAQRL, R, 0b0101111, 0b1110011010, RV32A, 4},
        {"lr.d", LRD, R, 0b0101111, 0b0001000011, RV64A, 4, {.custom_reg_val = 0b00000}},
        {"sc.d", SCD, R, 0b0101111, 0b0001100011, RV64A, 4},
        {"lr.d.aq", LRDAQ, R, 0b0101111, 0b0001010011, RV64A, 4, {.custom_reg_val = 0b00000}},
        {"sc.d.aq", SCDAQ, R, 0b0101111, 0b0001110011, RV64A, 4},
        {"lr.d.rl", LRDRL, R, 0b0101111, 0b0001001011, RV64A, 4, {.custom_reg_val = 0b00000}},
        {"sc.d.rl", SCDRL, R, 0b0101111, 0b0001101011, RV64A, 4},
        {"lr.d.aqrl", LRDAQRL, R, 0b0101111, 0b0001011011, RV64A, 4, {.custom_reg_val = 0b00000}},
        {"sc.d.aqrl", SCDAQRL, R, 0b0101111, 0b0001111011, RV64A, 4},
        {"amoswap.d", AMOSWAPD, R, 0b0101111, 0b0000100011, RV64A, 4},
        {"amoadd.d", AMOADDD, R, 0b0101111, 0b0000000011, RV64A, 4},
        {"amoxor.d", AMOXORD, R, 0b0101111, 0b0010000011, RV64A, 4},
        {"amoand.d", AMOANDD, R, 0b0101111, 0b0110000011, RV64A, 4},
        {"amoor.d", AMOORD, R, 0b0101111, 0b0100000011, RV64A, 4},
        {"amomin.d", AMOMIND, R, 0b0101111, 0b1000000011, RV64A, 4},
        {"amomax.d", AMOMAXD, R, 0b0101111, 0b1010000011, RV64A, 4},
        {"amominu.d", AMOMINUD, R, 0b0101111, 0b1100000011, RV64A, 4},
        {"amomaxu.d", AMOMAXUD, R, 0b0101111, 0b1110000011, RV64A, 4},
        {"amoswap.d.aq", AMOSWAPDAQ, R, 0b0101111, 0b0000110011, RV64A, 4},
        {"amoadd.d.aq", AMOADDDAQ, R, 0b0101111, 0b0000010011, RV64A, 4},
        {"amoxor.d.aq", AMOXORDAQ, R, 0b0101111, 0b0010010011, RV64A, 4},
        {"amoand.d.aq", AMOANDDAQ, R, 0b0101111, 0b0110010011, RV64A, 4},
        {"amoor.d.aq", AMOORDAQ, R, 0b0101111, 0b0100010011, RV64A, 4},
        {"amomin.d.aq", AMOMINDAQ, R, 0b0101111, 0b1000010011, RV64A, 4},
        {"amomax.d.aq", AMOMAXDAQ, R, 0b0101111, 0b1010010011, RV64A, 4},
        {"amominu.d.aq", AMOMINUDAQ, R, 0b0101111, 0b1100010011, RV64A, 4},
        {"amomaxu.d.aq", AMOMAXUDAQ, R, 0b0101111, 0b1110010011, RV64A, 4},
        {"amoswap.d.rl", AMOSWAPDRL, R, 0b0101111, 0b0000101011, RV64A, 4},
        {"amoadd.d.rl", AMOADDDRL, R, 0b0101111, 0b0000001011, RV64A, 4},
        {"amoxor.d.rl", AMOXORDRL, R, 0b0101111, 0b0010001011, RV64A, 4},
        {"amoand.d.rl", AMOANDDRL, R, 0b0101111, 0b0110001011, RV64A, 4},
        {"amoor.d.rl", AMOORDRL, R, 0b0101111, 0b0100001011, RV64A, 4},
        {"amomin.d.rl", AMOMINDRL, R, 0b0101111, 0b1000001011, RV64A, 4},
        {"amomax.d.rl", AMOMAXDRL, R, 0b0101111, 0b1010001011, RV64A, 4},
        {"amominu.d.rl", AMOMINUDRL, R, 0b0101111, 0b1100001011, RV64A, 4},
        {"amomaxu.d.rl", AMOMAXUDRL, R, 0b0101111, 0b1110001011, RV64A, 4},
        {"amoswap.d.aqrl", AMOSWAPDAQRL, R, 0b0101111, 0b0000111011, RV64A, 4},
        {"amoadd.d.aqrl", AMOADDDAQRL, R, 0b0101111, 0b0000011011, RV64A, 4},
        {"amoxor.d.aqrl", AMOXORDAQRL, R, 0b0101111, 0b0010011011, RV64A, 4},
        {"amoand.d.aqrl", AMOANDDAQRL, R, 0b0101111, 0b0110011011, RV64A, 4},
        {"amoor.d.aqrl", AMOORDAQRL, R, 0b0101111, 0b0100011011, RV64A, 4},
        {"amomin.d.aqrl", AMOMINDAQRL, R, 0b0101111, 0b1000011011, RV64A, 4},
        {"amomax.d.aqrl", AMOMAXDAQRL, R, 0b0101111, 0b1010011011, RV64A, 4},
        {"amominu.d.aqrl", AMOMINUDAQRL, R, 0b0101111, 0b1100011011, RV64A, 4},
        {"amomaxu.d.aqrl", AMOMAXUDAQRL, R, 0b0101111, 0b1110011011, RV64A, 4},
        {"fmadd.s", FMADDS, R4, 0b1000011, 0b00, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fmsub.s", FMSUBS, R4, 0b1000111, 0b00, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fnmsub.s", FNMSUBS, R4, 0b1001011, 0b00, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fnmadd.s", FNMADDS, R4, 0b1001111, 0b00, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fadd.s", FADDS, R, 0b1010011, 0b0000000000, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fsub.s", FSUBS, R, 0b1010011, 0b0000100000, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fmul.s", FMULS, R, 0b1010011, 0b0001000000, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fdiv.s", FDIVS, R, 0b1010011, 0b0001100000, RV32F, 4, {.use_frm_for_funct3 = true}},
        {"fsqrt.s", FSQRTS, R, 0b1010011, 0b0101100000, RV32F, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fsgnj.s", FSGNJS, R, 0b1010011, 0b0010000000, RV32F, 4},
        {"fsgnjn.s", FSGNJNS, R, 0b1010011, 0b0010000001, RV32F, 4},
        {"fsgnjx.s", FSGNJXS, R, 0b1010011, 0b0010000010, RV32F, 4},
        {"fmin.s", FMINS, R, 0b1010011, 0b0010100000, RV32F, 4},
        {"fmax.s", FMAXS, R, 0b1010011, 0b0010100001, RV32F, 4},
        {"fcvt.w.s", FCVTWS, R, 0b1010011, 0b1100000000, RV32F, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.wu.s", FCVTWUS, R, 0b1010011, 0b1100000000, RV32F, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fmv.x.w", FMVXW, R, 0b1010011, 0b1110000000, RV32F, 4, {.custom_reg_val = 0b00000}},
        {"feq.s", FEQS, R, 0b1010011, 0b1010000010, RV32F, 4},
        {"flt.s", FLTS, R, 0b1010011, 0b1010000001, RV32F, 4},
        {"fle.s", FLES, R, 0b1010011, 0b1010000000, RV32F, 4},
        {"fclass.s", FCLASSS, R, 0b1010011, 0b1110000001, RV32F, 4, {.custom_reg_val = 0b00000}},
        {"fcvt.s.w", FCVTSW, R, 0b1010011, 0b1101000000, RV32F, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.s.wu", FCVTSWU, R, 0b1010011, 0b1101000000, RV32F, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fmv.w.x", FMVWX, R, 0b1010011, 0b1111000000, RV32F, 4, {.custom_reg_val = 0b00000}},
        {"flw", FLW, I, 0b0000111, 0b010, RV32F, 4},
        {"fsw", FSW, S, 0b0100111, 0b010, RV32F, 4},
        {"fcvt.l.s", FCVTLS, R, 0b1010011, 0b1100000000, RV64F, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.lu.s", FCVTLUS, R, 0b1010011, 0b1100000000, RV64F, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fcvt.s.l", FCVTSL, R, 0b1010011, 0b1101000000, RV64F, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.s.lu", FCVTSLU, R, 0b1010011, 0b1101000000, RV64F, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fadd.d", FADDD, R, 0b1010011, 0b0000001000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"fmadd.d", FMADDD, R4, 0b1000011, 0b01000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"fmax.d", FMAXD, R, 0b1010011, 0b0010101001, RV32D, 4},
        {"fclass.d", FCLASSD, R, 0b1010011, 0b1110001001, RV32D, 4, {.custom_reg_val = 0b00000}},
        {"fcvt.d.s", FCVTDS, R, 0b1010011, 0b0100001000, RV32D, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.d.w", FCVTDW, R, 0b1010011, 0b1101001000, RV32D, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.d.wu", FCVTDWU, R, 0b1010011, 0b1101001000, RV32D, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fcvt.s.d", FCVTSD, R, 0b1010011, 0b0100000000, RV32D, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fcvt.w.d", FCVTWD, R, 0b1010011, 0b1100001000, RV32D, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.wu.d", FCVTWUD, R, 0b1010011, 0b1100001000, RV32D, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fdiv.d", FDIVD, R, 0b1010011, 0b0001101000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"feq.d", FEQD, R, 0b1010011, 0b1010001010, RV32D, 4},
        {"flt.d", FLTD, R, 0b1010011, 0b1010001001, RV32D, 4},
        {"fle.d", FLED, R, 0b1010011, 0b1010001000, RV32D, 4},
        {"fld", FLD, I, 0b0000111, 0b011, RV32D, 4},
        {"fmin.d", FMIND, R, 0b1010011, 0b0010101000, RV32D, 4},
        {"fmsub.d", FMSUBD, R4, 0b1000111, 0b01000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"fmul.d", FMULD, R, 0b1010011, 0b0001001000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"fnmadd.d", FNMADDD, R4, 0b1001111, 0b01000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"fnmsub.d", FNMSUBD, R4, 0b1001011, 0b01000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"fsd", FSD, S, 0b0100111, 0b011, RV32D, 4},
        {"fsgnj.d", FSGNJD, R, 0b1010011, 0b0010001000, RV32D, 4},
        {"fsgnjn.d", FSGJND, R, 0b1010011, 0b0010001001, RV32D, 4},
        {"fsgnjx.d", FSGNJXD, R, 0b1010011, 0b0010001010, RV32D, 4},
        {"fsqrt.d", FSQRTD, R, 0b1010011, 0b0101101000, RV32D, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fsub.d", FSUBD, R, 0b1010011, 0b0000101000, RV32D, 4, {.use_frm_for_funct3 = true}},
        {"fcvt.l.d", FCVTLD, R, 0b1010011, 0b1100001000, RV64D, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.lu.d", FCVTLUD, R, 0b1010011, 0b1100001000, RV64D, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fmv.x.d", FMVXD, R, 0b1010011, 0b1110001000, RV64D, 4, {.custom_reg_val = 0b00000}},
        {"fcvt.d.l", FCVTDL, R, 0b1010011, 0b1101001000, RV64D, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.d.lu", FCVTDLU, R, 0b1010011, 0b1101001000, RV64D, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fmv.d.x", FMVDX, R, 0b1010011, 0b1111001000, RV64D, 4, {.custom_reg_val = 0b00000}},
        {"flq", FLQ, I, 0b0000111, 0b100, RV32Q, 4},
        {"fsq", FSQ, S, 0b0100111, 0b100, RV32Q, 4},
        {"fmadd.q", FMADDQ, R4, 0b1000011, 0b11000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fmsub.q", FMSUBQ, R4, 0b1000111, 0b11000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fnmsub.q", FNMSUBQ, R4, 0b1001011, 0b11000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fnmadd.q", FNMADDQ, R4, 0b1001111, 0b11000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fadd.q", FADDQ, R, 0b1010011, 0b0000011000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fsub.q", FSUBQ, R, 0b1010011, 0b0000111000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fmul.q", FMULQ, R, 0b1010011, 0b0001011000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fdiv.q", FDIVQ, R, 0b1010011, 0b0001111000, RV32Q, 4, {.use_frm_for_funct3 = true}},
        {"fsqrt.q", FSQRTQ, R, 0b1010011, 0b0101111000, RV32Q, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fsgnj.q", FSGNJQ, R, 0b1010011, 0b0010011000, RV32Q, 4},
        {"fsgnjn.q", FSGNJNQ, R, 0b1010011, 0b0010011001, RV32Q, 4},
        {"fsgnjx.q", FSGNJXQ, R, 0b1010011, 0b0010011010, RV32Q, 4},
        {"fmin.q", FMINQ, R, 0b1010011, 0b0010111000, RV32Q, 4},
        {"fmax.q", FMAXQ, R, 0b1010011, 0b0010111001, RV32Q, 4},
        {"fcvt.s.q", FCVTSQ, R, 0b1010011, 0b0100000000, RV32Q, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fcvt.q.s", FCVTQS, R, 0b1010011, 0b0100011000, RV32Q, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.d.q", FCVTDQ, R, 0b1010011, 0b0100001000, RV32Q, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fcvt.q.d", FCVTQD, R, 0b1010011, 0b0100011000, RV32Q, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"feq.q", FEQQ, R, 0b1010011, 0b1010011010, RV32Q, 4},
        {"flt.q", FLTQ, R, 0b1010011, 0b1010011001, RV32Q, 4},
        {"fle.q", FLEQ, R, 0b1010011, 0b1010011000, RV32Q, 4},
        {"fclass.q", FCLASSQ, R, 0b1010011, 0b1110011001, RV32Q, 4, {.custom_reg_val = 0b00000}},
        {"fcvt.w.q", FCVTWQ, R, 0b1010011, 0b1100011000, RV32Q, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.wu.q", FCVTWUQ, R, 0b1010011, 0b1100011000, RV32Q, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fcvt.q.w", FCVTQW, R, 0b1010011, 0b1101011000, RV32Q, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.q.wu", FCVTQWU, R, 0b1010011, 0b1101011000, RV32Q, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fcvt.l.q", FCVTLQ, R, 0b1010011, 0b1100011000, RV64Q, RV64Q, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.lu.q", FCVTLUQ, R, 0b1010011, 0b1100011000, RV64Q, RV64Q, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fcvt.q.l", FCVTQL, R, 0b1010011, 0b1101011000, RV64Q, RV64Q, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.q.lu", FCVTQLU, R, 0b1010011, 0b1101011000, RV64Q, RV64Q, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"flh", FLH, I, 0b0000111, 0b001, RV32Zfh, 4},
        {"fsh", FSH, S, 0b0100111, 0b001, RV32Zfh, 4},
        {"fmadd.h", FMADDH, R4, 0b1000011, 0b10000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fmsub.h", FMSUBH, R4, 0b1000111, 0b10000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fnmsub.h", FNMSUBH, R4, 0b1001011, 0b10000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fnmadd.h", FNMADDH, R4, 0b1001111, 0b10000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fadd.h", FADDH, R, 0b1010011, 0b0000010000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fsub.h", FSUBH, R, 0b1010011, 0b0000110000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fmul.h", FMULH, R, 0b1010011, 0b0001010000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fdiv.h", FDIVH, R, 0b1010011, 0b0001110000, RV32Zfh, 4, {.use_frm_for_funct3 = true}},
        {"fsqrt.h", FSQRTH, R, 0b1010011, 0b0101110000, RV32Zfh, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fsgnj.h", FSGNJH, R, 0b1010011, 0b0010010000, RV32Zfh, 4},
        {"fsgnjn.h", FSGNJNH, R, 0b1010011, 0b0010010001, RV32Zfh, 4},
        {"fsgnjx.h", FSGNJXH, R, 0b1010011, 0b0010010010, RV32Zfh, 4},
        {"fmin.h", FMINH, R, 0b1010011, 0b0010110000, RV32Zfh, 4},
        {"fmax.h", FMAXH, R, 0b1010011, 0b0010110001, RV32Zfh, 4},
        {"fcvt.s.h", FCVTSH, R, 0b1010011, 0b0100000000, RV32Zfh, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.h.s", FCVTHS, R, 0b1010011, 0b0100010000, RV32Zfh, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.d.h", FCVTDH, R, 0b1010011, 0b0100001000, RV32Zfh, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.h.d", FCVTHD, R, 0b1010011, 0b0100010000, RV32Zfh, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fcvt.q.h", FCVTQH, R, 0b1010011, 0b0100011000, RV32Zfh, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.h.q", FCVTHQ, R, 0b1010011, 0b0100010000, RV32Zfh, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"feq.h", FEQH, R, 0b1010011, 0b1010010010, RV32Zfh, 4},
        {"flt.h", FLTH, R, 0b1010011, 0b1010010001, RV32Zfh, 4},
        {"fle.h", FLEH, R, 0b1010011, 0b1010010000, RV32Zfh, 4},
        {"fclass.h", FCLASSH, R, 0b1010011, 0b1110010001, RV32Zfh, 4, {.custom_reg_val = 0b00000}},
        {"fcvt.w.h", FCVTWH, R, 0b1010011, 0b1100010000, RV32Zfh, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.wu.h", FCVTWUH, R, 0b1010011, 0b1100010000, RV32Zfh, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fmv.x.h", FMVXH, R, 0b1010011, 0b1110010000, RV32Zfh, 4, {.custom_reg_val = 0b00000}},
        {"fcvt.h.w", FCVTHW, R, 0b1010011, 0b1101010000, RV32Zfh, 4, {.custom_reg_val = 0b00000, .use_frm_for_funct3 = true}},
        {"fcvt.h.wu", FCVTHWU, R, 0b1010011, 0b1101010000, RV32Zfh, 4, {.custom_reg_val = 0b00001, .use_frm_for_funct3 = true}},
        {"fmv.h.x", FMVXH, R, 0b1010011, 0b1111010000, RV32Zfh, 4, {.custom_reg_val = 0b00000}},
        {"fcvt.l.h", FCVTLH, R, 0b1010011, 0b1100010000, RV64Zfh, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.lu.h", FCVTLUH, R, 0b1010011, 0b1100010000, RV64Zfh, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fcvt.h.l", FCVTHL, R, 0b1010011, 0b1101010000, RV64Zfh, 4, {.custom_reg_val = 0b00010, .use_frm_for_funct3 = true}},
        {"fcvt.h.lu", FCVTHLU, R, 0b1010011, 0b1101010000, RV64Zfh, 4, {.custom_reg_val = 0b00011, .use_frm_for_funct3 = true}},
        {"fence.i", FENCEI, I, 0b0001111, 0b001, Zifencei, 4, {.super_special_snowflake = true}},
        {"csrrw", CSRRW, I, 0b1110011, 0b001, Zicsr, 4, {.super_special_snowflake = true}},
        {"csrrs", CSRRS, I, 0b1110011, 0b010, Zicsr, 4, {.super_special_snowflake = true}},
        {"csrrc", CSRRC, I, 0b1110011, 0b011, Zicsr, 4, {.super_special_snowflake = true}},
        {"csrrwi", CSRRWI, I, 0b1110011, 0b101, Zicsr, 4, {.super_special_snowflake = true}},
        {"csrrsi", CSRRSI, I, 0b1110011, 0b110, Zicsr, 4, {.super_special_snowflake = true}},
        {"csrrci", CSRRCI, I, 0b1110011, 0b111, Zicsr, 4, {.super_special_snowflake = true}},
        {"wrs.nto", WRSNTO, I, 0b1110011, 0b000, Zawrs, 4, {.super_special_snowflake = true}},
        {"wrs.sto", WRSSTO, I, 0b1110011, 0b000, Zawrs, 4, {.super_special_snowflake = true}},
        {"c.lwsp", CLWSP, CI, 0b10, 0b010, C, 2},
        {"c.ldsp", CLDSP, CI, 0b10, 0b011, C, 2},
        {"c.flwsp", CFLWSP, CI, 0b10, 0b011, C, Zcf, 2},
        {"c.fldsp", CFLDSP, CI, 0b10, 0b001, C, Zcd, 2},
        {"c.swsp", CSWSP, CSS, 0b10, 0b110, C, 2},
        {"c.sdsp", CSDSP, CSS, 0b10, 0b111, C, 2},
        {"c.fswsp", CFSWSP, CSS, 0b10, 0b111, C, Zcf, 2},
        {"c.fsdsp", CFSDSP, CSS, 0b10, 0b101, C, Zcd, 2},
        {"c.lw", CLW, CL, 0b00, 0b010, C, 2},
        {"c.ld", CLD, CL, 0b00, 0b011, C, 2},
        {"c.flw", CFLW, CL, 0b00, 0b011, C, Zcf, 2},
        {"c.fld", CFLD, CL, 0b00, 0b001, C, Zcd, 2},
        {"c.sw", CSW, CS, 0b00, 0b110, C, 2},
        {"c.sd", CSD, CS, 0b00, 0b111, C, 2},
        {"c.fsw", CFSW, CS, 0b00, 0b111, C, Zcf, 2},
        {"c.fsd", CFSD, CS, 0b00, 0b101, C, Zcd, 2},
        {"c.j", CJump, CJ, 0b01, 0b101, C, 2},
        {"c.jal", CJAL, CJ, 0b01, 0b001, C, 2},
        {"c.jr", CJR, CR, 0b10, 0b1000, C, 2, {.custom_reg_val = 0b00000}},
        {"c.jalr", CJALR, CR, 0b10, 0b1001, C, 2, {.custom_reg_val = 0b00000}},
        {"c.beqz", CBEQZ, CB, 0b01, 0b110, C, 2},
        {"c.bnez", CBNEZ, CB, 0b01, 0b111, C, 2},
        {"c.li", CLI, CI, 0b01, 0b010, C, 2},
        {"c.lui", CLUI, CI, 0b01, 0b011, C, 2},
        {"c.addi", CADDI, CI, 0b01, 0b000, C, 2},
        {"c.addiw", CADDIW, CI, 0b01, 0b001, C, 2},
        {"c.addi16sp", CADDI16SP, CI, 0b01, 0b011, C, 2},
        {"c.slli", CSLLI, CI, 0b10, 0b000, C, 2},
        {"c.srli", CSRLI, CB, 0b01, 0b10000, C, 2},
        {"c.srai", CSRAI, CB, 0b01, 0b10001, C, 2},
        {"c.andi", CANDI, CB, 0b01, 0b10010, C, 2},
        {"c.mv", CMV, CR, 0b10, 0b1000, C, 2},
        {"c.add", CADD, CR, 0b10, 0b1001, C, 2},
        {"c.and", CAND, CA, 0b01, 0b10001111, C, 2},
        {"c.or", COR, CA, 0b01, 0b10001110, C, 2},
        {"c.xor", CXOR, CA, 0b01, 0b10001101, C, 2},
        {"c.sub", CSUB, CA, 0b01, 0b10001100, C, 2},
        {"c.addw", CADDW, CA, 0b01, 0b10011101, C, 2},
        {"c.subw", CSUBW, CA, 0b01, 0b10011100, C, 2},
        {"c.nop", CNOP, CI, 0b01, 0b000, C, 2, {.super_special_snowflake = true}},
        {"c.ebreak", CEBREAK, CI, 0b10, 0b1001, C, 2, {.super_special_snowflake = true}},
        {"czero.eqz", CZEROEQZ, R, 0b0110011, 0b0000111101, Zicond, Zicond, 4},
        {"czero.nez", CZERONEZ, R, 0b0110011, 0b0000111111, Zicond, Zicond, 4},
        {"amocas.w", AMOCASW, R, 0b0101111, 0b0010100010, Zacas, 4},
        {"amocas.d", AMOCASD, R, 0b0101111, 0b0010100011, Zacas, 4},
        {"amocas.q", AMOCASQ, R, 0b0101111, 0b0010100100, Zacas, 4},
        {"amocas.w.aq", AMOCASWAQ, R, 0b0101111, 0b0010110010, Zacas, 4},
        {"amocas.d.aq", AMOCASDAQ, R, 0b0101111, 0b0010110011, Zacas, 4},
        {"amocas.q.aq", AMOCASQAQ, R, 0b0101111, 0b0010110100, Zacas, 4},
        {"amocas.w.rl", AMOCASWRL, R, 0b0101111, 0b0010101010, Zacas, 4},
        {"amocas.d.rl", AMOCASDRL, R, 0b0101111, 0b0010101011, Zacas, 4},
        {"amocas.q.rl", AMOCASQRL, R, 0b0101111, 0b0010101100, Zacas, 4},
        {"amocas.w.aqrl", AMOCASWAQRL, R, 0b0101111, 0b0010111010, Zacas, 4},
        {"amocas.d.aqrl", AMOCASDAQRL, R, 0b0101111, 0b0010111011, Zacas, 4},
        {"amocas.q.aqrl", AMOCASQAQRL, R, 0b0101111, 0b0010111100, Zacas, 4},
        {"c.lbu", CLBU, CLB, 0b00, 0b100000, Zcb, 2},
        {"c.lhu", CLHU, CLHfmt, 0b00, 0b1000010, Zcb, 2},
        {"c.lh", CLH, CLHfmt, 0b00, 0b1000011, Zcb, 2},
        {"c.sb", CSB, CSHfmt, 0b00, 0b100010, Zcb, 2},
        {"c.sh", CSH, CSHfmt, 0b00, 0b1000110, Zcb, 2},
        {"c.zext.b", CZEXTB, CU, 0b01, 0b10011111000, Zcb, 2},
        {"c.sext.b", CSEXTB, CU, 0b01, 0b10011111001, Zcb, 2},
        {"c.zext.h", CZEXTH, CU, 0b01, 0b10011111010, Zcb, 2},
        {"c.sext.h", CSEXTH, CU, 0b01, 0b10011111011, Zcb, 2},
        {"c.zext.w", CZEXTW, CU, 0b01, 0b10011111100, Zcb, 2},
        {"c.not", CNOT, CU, 0b01, 0b10011111101, Zcb, 2},
        {"c.mul", CMUL, CA, 0b01, 0b10011110, Zcb, 2},
        {"cm.push", CMPUSH, CMPP, 0b10, 0b10111000, Zcmp, 2},
        {"cm.pop", CMPOP, CMPP, 0b10, 0b10111010, Zcmp, 2},
        {"cm.popretz", CMPOPRETZ, CMPP, 0b10, 0b10111100, Zcmp, 2},
        {"cm.popret", CMPOPRET, CMPP, 0b10, 0b10111110, Zcmp, 2},
        {"cm.mvsa01", CMMVSA01, CMMV, 0b10, 0b10101101, Zcmp, 2},
        {"cm.mva01s", CMMVA01S, CMMV, 0b10, 0b10101111, Zcmp, 2},
        {"cm.jt", CMJT, CMJTfmt, 0b10, 0b101000, Zcmt, 2},
        {"cm.jalt", CMJALT, CMJTfmt, 0b10, 0b101000, Zcmt, 2},
        {"add.uw", ADDUW, R, 0b0111011, 0b0000100000, B, 4},
        {"andn", ANDN, R, 0b0110011, 0b0100000111, B, 4},
        {"bclr", BCLR, R, 0b0110011, 0b0100100001, B, 4},
        {"bclri", BCLRI, R, 0b0010011, 0b0100100001, B, 4, {.use_imm_for_rs2 = true}}, // This one "requires" an extra bit in shamt for RV64, but in reality it's a special case where shamt is big
                                                                                         // enough to clear a 64 bit register, so we just add the extra bit to rs2 and let the extra available space
                                                                                         // handle it transparently
        {"bext", BEXT, R, 0b0110011, 0b0100100101, B, 4},
        {"bexti", BEXTI, R, 0b0010011, 0b0100100101, B, 4, {.use_imm_for_rs2 = true}}, // Same idea as bclri
        {"binv", BINV, R, 0b0110011, 0b0110100001, B, 4},
        {"binvi", BINVI, R, 0b0010011, 0b0110100001, B, 4, {.use_imm_for_rs2 = true}}, // Same idea as bclri
        {"bset", BSET, R, 0b0110011, 0b0010100001, B, 4},
        {"bseti", BSETI, R, 0b0010011, 0b0010100001, B, 4, {.use_imm_for_rs2 = true}}, // Same idea as bclri
        {"clmul", CLMUL, R, 0b0110011, 0b0000101001, B, 4},
        {"clmulh", CLMULH, R, 0b0110011, 0b0000101011, B, 4},
        {"clmulr", CLMULR, R, 0b0110011, 0b0000101010, B, 4},
        {"clz", CLZ, R, 0b0010011, 0b0110000001, B, 4, {.custom_reg_val = 0b00000}},
        {"clzw", CLZW, R, 0b0011011, 0b0110000001, B, 4, {.custom_reg_val = 0b00000}},
        {"cpop", CPOP, R, 0b0010011, 0b0110000001, B, 4, {.custom_reg_val = 0b00010}},
        {"cpopw", CPOPW, R, 0b0011011, 0b0110000001, B, 4, {.custom_reg_val = 0b00010}},
        {"ctz", CTZ, R, 0b0010011, 0b0110000001, B, 4, {.custom_reg_val = 0b00001}},
        {"ctzw", CTZW, R, 0b0011011, 0b0110000001, B, 4, {.custom_reg_val = 0b00001}},
        {"max", MAX, R, 0b0110011, 0b0000101110, B, 4},
        {"maxu", MAXU, R, 0b0110011, 0b0000101111, B, 4},
        {"min", MIN, R, 0b0110011, 0b0000101100, B, 4},
        {"minu", MINU, R, 0b0110011, 0b0000101101, B, 4},
        {"orc.b", ORCB, R, 0b0010011, 0b0010100101, B, 4, {.custom_reg_val = 0b00111}},
        {"orn", ORN, R, 0b0110011, 0b0100000110, B, 4},
        {"pack", PACK, R, 0b0110011, 0b0000100100, B, 4},
        {"packh", PACKH, R, 0b0110011, 0b0000100111, B, 4},
        {"packw", PACKW, R, 0b0111011, 0b0000100100, B, 4},
        {"rev8", REV8, R, 0b0010011, 0b0110100101, B, 4, {.custom_reg_val = 0b11000}}, // This one is similar to bclri, but it instead makes bit 25 1 on rv64 and otherwise stays the same
        {"rev.b", REVB, R, 0b0010011, 0b0110100101, B, 4, {.custom_reg_val = 0b00111}},
        {"rol", ROL, R, 0b0110011, 0b0110000001, B, 4},
        {"rolw", ROLW, R, 0b0111011, 0b0110000001, B, 4},
        {"ror", ROR, R, 0b0110011, 0b0110000101, B, 4},
        {"rori", RORI, R, 0b0010011, 0b0110000101, B, 4, {.use_imm_for_rs2 = true}}, // Same idea as bclri
        {"roriw", RORIW, R, 0b0011011, 0b0110000101, B, 4, {.use_imm_for_rs2 = true}},
        {"rorw", RORW, R, 0b0111011, 0b0110000101, B, 4},
        {"sext.b", SEXTB, R, 0b0010011, 0b0110000001, B, 4, {.custom_reg_val = 0b00100}},
        {"sext.h", SEXTH, R, 0b0010011, 0b0110000001, B, 4, {.custom_reg_val = 0b00101}},
        {"sh1add", SH1ADD, R, 0b0110011, 0b0010000010, B, 4},
        {"sh2add.uw", SH1ADDUW, R, 0b0111011, 0b0010000010, B, 4},
        {"sh2add", SH2ADD, R, 0b0110011, 0b0010000100, B, 4},
        {"sh2add.uw", SH2ADDUW, R, 0b0111011, 0b0010000100, B, 4},
        {"sh3add", SH3ADD, R, 0b0110011, 0b0010000110, B, 4},
        {"sh3add.uw", SH3ADDUW, R, 0b0111011, 0b0010000110, B, 4},
        {"slli.uw", SLLIUW, R, 0b0011011, 0b000010001, B, 4, {.use_imm_for_rs2 = true}},
        {"unzip", UNZIP, R, 0b0010011, 0b0000100101, B, 4, {.custom_reg_val = 0b11111}},
        {"xnor", XNOR, R, 0b0110011, 0b0100000100, B, 4},
        {"xperm.b", XPERMB, R, 0b0110011, 0b0010100100, B, 4},
        {"xperm.n", XPERMN, R, 0b0110011, 0b0010100010, B, 4},
        {"zext.h", ZEXTH, R, 0b0110011, 0b0000100100, B, 4, {.custom_reg_val = 0b00000}}, // Similar to rev8, but we make bit 4 (in the opcode) 1 instead for rv64
        {"zip", ZIP, R, 0b0010011, 0b0000100001, B, 4, {.custom_reg_val = 0b11110}},
        {"vsetvli", VSETVLI, I, 0b1010111, 0b111, V, 4, {.super_special_snowflake = true}},
        {"vsetivli", VSETIVLI, I, 0b1010111, 0b111, V, 4, {.use_imm_for_rs2 = true, .super_special_snowflake = true}},
        {"vsetvl", VSETVL, R, 0b1010111, 0b1000000111, V, 4},
        {"vle8.v", VLE8V, VL, 0b0000111, 0b000001000, V, 4, {.custom_reg_val = 0b00000}},
        {"vle16.v", VLE16V, VL, 0b0000111, 0b000001101, V, 4, {.custom_reg_val = 0b00000}},
        {"vle32.v", VLE32V, VL, 0b0000111, 0b000001110, V, 4, {.custom_reg_val = 0b00000}},
        {"vle64.v", VLE64V, VL, 0b0000111, 0b000001111, V, 4, {.custom_reg_val = 0b00000}},
        {"vse8.v", VSE8V, VS, 0b0100111, 0b000001000, V, 4, {.custom_reg_val = 0b00000}},
        {"vse16.v", VSE16V, VS, 0b0100111, 0b000001101, V, 4, {.custom_reg_val = 0b00000}},
        {"vse32.v", VSE32V, VS, 0b0100111, 0b000001110, V, 4, {.custom_reg_val = 0b00000}},
        {"vse64.v", VSE64V, VS, 0b0100111, 0b000001111, V, 4, {.custom_reg_val = 0b00000}},
        {"vlm.v", VLMV, VL, 0b0000111, 0b0000001000, V, 4, {.custom_reg_val = 0b01011}},
        {"vsm.v", VSMV, VS, 0b0100111, 0b0000001000, V, 4, {.custom_reg_val = 0b01011}},
        {"vlse8.v", VLSE8V, VLS, 0b0000111, 0b0000101000, V, 4},
        {"vlse16.v", VLSE16V, VLS, 0b0000111, 0b0000101101, V, 4},
        {"vlse32.v", VLSE32V, VLS, 0b0000111, 0b0000101110, V, 4},
        {"vlse64.v", VLSE64V, VLS, 0b0000111, 0b0000101111, V, 4},
        {"vsse8.v", VSSE8V, VSS, 0b0100111, 0b0000101000, V, 4},
        {"vsse16.v", VSSE16V, VSS, 0b0100111, 0b0000101101, V, 4},
        {"vsse32.v", VSSE32V, VSS, 0b0100111, 0b0000101110, V, 4},
        {"vsse64.v", VSSE64V, VSS, 0b0100111, 0b0000101111, V, 4},
        {"vluxei8.v", VLUXEI8V, VLX, 0b0000111, 0b0000011000, V, 4},
        {"vluxei16.v", VLUXEI16V, VLX, 0b0000111, 0b0000011101, V, 4},
        {"vluxei32.v", VLUXEI32V, VLX, 0b0000111, 0b0000011110, V, 4},
        {"vluxei64.v", VLUXEI64V, VLX, 0b0000111, 0b0000011111, V, 4},
        {"vloxei8.v", VLOXEI8V, VLX, 0b0000111, 0b0000111000, V, 4},
        {"vloxei16.v", VLOXEI16V, VLX, 0b0000111, 0b0000111101, V, 4},
        {"vloxei32.v", VLOXEI32V, VLX, 0b0000111, 0b0000111110, V, 4},
        {"vloxei64.v", VLOXEI64V, VLX, 0b0000111, 0b0000111111, V, 4},
        {"vsuxei8.v", VSUXEI8V, VSX, 0b0100111, 0b0000011000, V, 4},
        {"vsuxei16.v", VSUXEI16V, VSX, 0b0100111, 0b0000011101, V, 4},
        {"vsuxei32.v", VSUXEI32V, VSX, 0b0100111, 0b0000011110, V, 4},
        {"vsuxei64.v", VSUXEI64V, VSX, 0b0100111, 0b0000011111, V, 4},
        {"vsoxei8.v", VSOXEI8V, VSX, 0b0100111, 0b0000111000, V, 4},
        {"vsoxei16.v", VSOXEI16V, VSX, 0b0100111, 0b0000111101, V, 4},
        {"vsoxei32.v", VSOXEI32V, VSX, 0b0100111, 0b0000111110, V, 4},
        {"vsoxei64.v", VSOXEI64V, VSX, 0b0100111, 0b0000111111, V, 4},
        {"vle8ff.v", VLE8FFV, VL, 0b0000111, 0b000000110000000, V, 4},
        {"vle16ff.v", VLE16FFV, VL, 0b0000111, 0b000000110000101, V, 4},
        {"vle32ff.v", VLE32FFV, VL, 0b0000111, 0b000000110000110, V, 4},
        {"vle64ff.v", VLE64FFV, VL, 0b0000111, 0b000000110000111, V, 4},
        {"vlseg2e8.v", VLSEG2E8V, VL, 0b0000111, 0b001000100000000, V, 4},
        {"vsseg2e8.v", VSSEG2E8V, VS, 0b0100111, 0b001000100000000, V, 4},
        {"vlseg2e16.v", VLSEG2E16V, VL, 0b0000111, 0b001000100000101, V, 4},
        {"vsseg2e16.v", VSSEG2E16V, VS, 0b0100111, 0b001000100000101, V, 4},
        {"vlseg2e32.v", VLSEG2E32V, VL, 0b0000111, 0b001000100000110, V, 4},
        {"vsseg2e32.v", VSSEG2E32V, VS, 0b0100111, 0b001000100000110, V, 4},
        {"vlseg2e64.v", VLSEG2E64V, VL, 0b0000111, 0b001000100000111, V, 4},
        {"vsseg2e64.v", VSSEG2E64V, VS, 0b0100111, 0b001000100000111, V, 4},
        {"vlseg3e8.v", VLSEG3E8V, VL, 0b0000111, 0b010000100000000, V, 4},
        {"vsseg3e8.v", VSSEG3E8V, VS, 0b0100111, 0b010000100000000, V, 4},
        {"vlseg3e16.v", VLSEG3E16V, VL, 0b0000111, 0b010000100000101, V, 4},
        {"vsseg3e16.v", VSSEG3E16V, VS, 0b0100111, 0b010000100000101, V, 4},
        {"vlseg3e32.v", VLSEG3E32V, VL, 0b0000111, 0b010000100000110, V, 4},
        {"vsseg3e32.v", VSSEG3E32V, VS, 0b0100111, 0b010000100000110, V, 4},
        {"vlseg3e64.v", VLSEG3E64V, VL, 0b0000111, 0b010000100000111, V, 4},
        {"vsseg3e64.v", VSSEG3E64V, VS, 0b0100111, 0b010000100000111, V, 4},
        {"vlseg4e8.v", VLSEG4E8V, VL, 0b0000111, 0b011000100000000, V, 4},
        {"vsseg4e8.v", VSSEG4E8V, VS, 0b0100111, 0b011000100000000, V, 4},
        {"vlseg4e16.v", VLSEG4E16V, VL, 0b0000111, 0b011000100000101, V, 4},
        {"vsseg3e16.v", VSSEG4E16V, VS, 0b0100111, 0b011000100000101, V, 4},
        {"vlseg4e32.v", VLSEG4E32V, VL, 0b0000111, 0b011000100000110, V, 4},
        {"vsseg3e32.v", VSSEG4E32V, VS, 0b0100111, 0b011000100000110, V, 4},
        {"vlseg4e64.v", VLSEG4E64V, VL, 0b0000111, 0b011000100000111, V, 4},
        {"vsseg4e64.v", VSSEG4E64V, VS, 0b0100111, 0b011000100000111, V, 4},
        {"vlseg5e8.v", VLSEG5E8V, VL, 0b0000111, 0b100000100000000, V, 4},
        {"vsseg5e8.v", VSSEG5E8V, VS, 0b0100111, 0b100000100000000, V, 4},
        {"vlseg5e16.v", VLSEG5E16V, VL, 0b0000111, 0b100000100000101, V, 4},
        {"vsseg5e16.v", VSSEG5E16V, VS, 0b0100111, 0b100000100000101, V, 4},
        {"vlseg5e32.v", VLSEG5E32V, VL, 0b0000111, 0b100000100000110, V, 4},
        {"vsseg5e32.v", VSSEG5E32V, VS, 0b0100111, 0b100000100000110, V, 4},
        {"vlseg5e64.v", VLSEG5E64V, VL, 0b0000111, 0b100000100000111, V, 4},
        {"vsseg5e64.v", VSSEG5E64V, VS, 0b0100111, 0b100000100000111, V, 4},
        {"vlseg6e8.v", VLSEG6E8V, VL, 0b0000111, 0b101000100000000, V, 4},
        {"vsseg6e8.v", VSSEG6E8V, VS, 0b0100111, 0b101000100000000, V, 4},
        {"vlseg6e16.v", VLSEG6E16V, VL, 0b0000111, 0b101000100000101, V, 4},
        {"vsseg6e16.v", VSSEG6E16V, VS, 0b0100111, 0b101000100000101, V, 4},
        {"vlseg6e32.v", VLSEG6E32V, VL, 0b0000111, 0b101000100000110, V, 4},
        {"vsseg6e32.v", VSSEG6E32V, VS, 0b0100111, 0b101000100000110, V, 4},
        {"vlseg6e64.v", VLSEG6E64V, VL, 0b0000111, 0b101000100000111, V, 4},
        {"vsseg6e64.v", VSSEG6E64V, VS, 0b0100111, 0b101000100000111, V, 4},
        {"vlseg7e8.v", VLSEG7E8V, VL, 0b0000111, 0b110000100000000, V, 4},
        {"vsseg7e8.v", VSSEG7E8V, VS, 0b0100111, 0b110000100000000, V, 4},
        {"vlseg7e16.v", VLSEG7E16V, VL, 0b0000111, 0b110000100000101, V, 4},
        {"vsseg7e16.v", VSSEG7E16V, VS, 0b0100111, 0b110000100000101, V, 4},
        {"vlseg7e32.v", VLSEG7E32V, VL, 0b0000111, 0b110000100000110, V, 4},
        {"vsseg7e32.v", VSSEG7E32V, VS, 0b0100111, 0b110000100000110, V, 4},
        {"vlseg7e64.v", VLSEG7E64V, VL, 0b0000111, 0b110000100000111, V, 4},
        {"vsseg7e64.v", VSSEG7E64V, VS, 0b0100111, 0b110000100000111, V, 4},
        {"vlseg8e8.v", VLSEG8E8V, VL, 0b0000111, 0b111000100000000, V, 4},
        {"vsseg8e8.v", VSSEG8E8V, VS, 0b0100111, 0b111000100000000, V, 4},
        {"vlseg8e16.v", VLSEG8E16V, VL, 0b0000111, 0b111000100000101, V, 4},
        {"vsseg8e16.v", VSSEG8E16V, VS, 0b0100111, 0b111000100000101, V, 4},
        {"vlseg8e32.v", VLSEG8E32V, VL, 0b0000111, 0b111000100000110, V, 4},
        {"vsseg8e32.v", VSSEG8E32V, VS, 0b0100111, 0b111000100000110, V, 4},
        {"vlseg8e64.v", VLSEG8E64V, VL, 0b0000111, 0b111000100000111, V, 4},
        {"vsseg8e64.v", VSSEG8E64V, VS, 0b0100111, 0b111000100000111, V, 4},
        {"vlseg2e8ff.v", VLSEG2E8FFV, VL, 0b0000111, 0b001000110000000, V, 4},
        {"vlseg2e16ff.v", VLSEG2E16FFV, VL, 0b0000111, 0b001000110000101, V, 4},
        {"vlseg2e32ff.v", VLSEG2E32FFV, VL, 0b0000111, 0b001000110000110, V, 4},
        {"vlseg2e64ff.v", VLSEG2E64FFV, VL, 0b0000111, 0b001000110000111, V, 4},
        {"vlseg3e8ff.v", VLSEG3E8FFV, VL, 0b0000111, 0b010000110000000, V, 4},
        {"vlseg3e16ff.v", VLSEG3E16FFV, VL, 0b0000111, 0b010000110000101, V, 4},
        {"vlseg3e32ff.v", VLSEG3E32FFV, VL, 0b0000111, 0b010000110000110, V, 4},
        {"vlseg3e64ff.v", VLSEG3E64FFV, VL, 0b0000111, 0b010000110000111, V, 4},
        {"vlseg4e8ff.v", VLSEG4E8FFV, VL, 0b0000111, 0b011000110000000, V, 4},
        {"vlseg4e16ff.v", VLSEG4E16FFV, VL, 0b0000111, 0b011000110000101, V, 4},
        {"vlseg4e32ff.v", VLSEG4E32FFV, VL, 0b0000111, 0b011000110000110, V, 4},
        {"vlseg4e64ff.v", VLSEG4E64FFV, VL, 0b0000111, 0b011000110000111, V, 4},
        {"vlseg5e8ff.v", VLSEG5E8FFV, VL, 0b0000111, 0b100000110000000, V, 4},
        {"vlseg5e16ff.v", VLSEG5E16FFV, VL, 0b0000111, 0b100000110000101, V, 4},
        {"vlseg5e32ff.v", VLSEG5E32FFV, VL, 0b0000111, 0b100000110000110, V, 4},
        {"vlseg5e64ff.v", VLSEG5E64FFV, VL, 0b0000111, 0b100000110000111, V, 4},
        {"vlseg6e8ff.v", VLSEG6E8FFV, VL, 0b0000111, 0b101000110000000, V, 4},
        {"vlseg6e16ff.v", VLSEG6E16FFV, VL, 0b0000111, 0b101000110000101, V, 4},
        {"vlseg6e32ff.v", VLSEG6E32FFV, VL, 0b0000111, 0b101000110000110, V, 4},
        {"vlseg6e64ff.v", VLSEG6E64FFV, VL, 0b0000111, 0b101000110000111, V, 4},
        {"vlseg7e8ff.v", VLSEG7E8FFV, VL, 0b0000111, 0b110000110000000, V, 4},
        {"vlseg7e16ff.v", VLSEG7E16FFV, VL, 0b0000111, 0b110000110000101, V, 4},
        {"vlseg7e32ff.v", VLSEG7E32FFV, VL, 0b0000111, 0b110000110000110, V, 4},
        {"vlseg7e64ff.v", VLSEG7E64FFV, VL, 0b0000111, 0b110000110000111, V, 4},
        {"vlseg8e8ff.v", VLSEG8E8FFV, VL, 0b0000111, 0b111000110000000, V, 4},
        {"vlseg8e16ff.v", VLSEG8E16FFV, VL, 0b0000111, 0b111000110000101, V, 4},
        {"vlseg8e32ff.v", VLSEG8E32FFV, VL, 0b0000111, 0b111000110000110, V, 4},
        {"vlseg8e64ff.v", VLSEG8E64FFV, VL, 0b0000111, 0b111000110000111, V, 4},
        {"vlsseg2e8.v", VLSSEG2E8V, VLS, 0b0000111, 0b001010100000000, V, 4},
        {"vsseg2e8.v", VSSEG2E8V, VSS, 0b0100111, 0b001010100000000, V, 4},
        {"vlsseg2e16.v", VLSSEG2E16V, VLS, 0b0000111, 0b001010100000101, V, 4},
        {"vsseg2e16.v", VSSEG2E16V, VSS, 0b0100111, 0b001010100000101, V, 4},
        {"vlsseg2e32.v", VLSSEG2E32V, VLS, 0b0000111, 0b001010100000110, V, 4},
        {"vsseg2e32.v", VSSEG2E32V, VSS, 0b0100111, 0b001010100000110, V, 4},
        {"vlsseg2e64.v", VLSSEG2E64V, VLS, 0b0000111, 0b001010100000111, V, 4},
        {"vsseg2e64.v", VSSEG2E64V, VSS, 0b0100111, 0b001010100000111, V, 4},
        {"vlsseg3e8.v", VLSSEG3E8V, VLS, 0b0000111, 0b010010100000000, V, 4},
        {"vsseg3e8.v", VSSEG3E8V, VSS, 0b0100111, 0b010010100000000, V, 4},
        {"vlsseg3e16.v", VLSSEG3E16V, VLS, 0b0000111, 0b010010100000101, V, 4},
        {"vsseg3e16.v", VSSEG3E16V, VSS, 0b0100111, 0b010010100000101, V, 4},
        {"vlsseg3e32.v", VLSSEG3E32V, VLS, 0b0000111, 0b010010100000110, V, 4},
        {"vsseg3e32.v", VSSEG3E32V, VSS, 0b0100111, 0b010010100000110, V, 4},
        {"vlsseg3e64.v", VLSSEG3E64V, VLS, 0b0000111, 0b010010100000111, V, 4},
        {"vsseg3e64.v", VSSEG3E64V, VSS, 0b0100111, 0b010010100000111, V, 4},
        {"vlsseg4e8.v", VLSSEG4E8V, VLS, 0b0000111, 0b011010100000000, V, 4},
        {"vsseg4e8.v", VSSEG4E8V, VSS, 0b0100111, 0b011010100000000, V, 4},
        {"vlsseg4e16.v", VLSSEG4E16V, VLS, 0b0000111, 0b011010100000101, V, 4},
        {"vsseg4e16.v", VSSEG4E16V, VSS, 0b0100111, 0b011010100000101, V, 4},
        {"vlsseg4e32.v", VLSSEG4E32V, VLS, 0b0000111, 0b011010100000110, V, 4},
        {"vsseg4e32.v", VSSEG4E32V, VSS, 0b0100111, 0b011010100000110, V, 4},
        {"vlsseg4e64.v", VLSSEG4E64V, VLS, 0b0000111, 0b011010100000111, V, 4},
        {"vsseg4e64.v", VSSEG4E64V, VSS, 0b0100111, 0b011010100000111, V, 4},
        {"vlsseg5e8.v", VLSSEG5E8V, VLS, 0b0000111, 0b100010100000000, V, 4},
        {"vsseg5e8.v", VSSEG5E8V, VSS, 0b0100111, 0b100010100000000, V, 4},
        {"vlsseg5e.v", VLSSEG5E16V, VLS, 0b0000111, 0b100010100000101, V, 4},
        {"vsseg5e16.v", VSSEG5E16V, VSS, 0b0100111, 0b100010100000101, V, 4},
        {"vlsseg5e32.v", VLSSEG5E32V, VLS, 0b0000111, 0b100010100000110, V, 4},
        {"vsseg5e32.v", VSSEG5E32V, VSS, 0b0100111, 0b100010100000110, V, 4},
        {"vlsseg5e64.v", VLSSEG5E64V, VLS, 0b0000111, 0b100010100000111, V, 4},
        {"vsseg5e64.v", VSSEG5E64V, VSS, 0b0100111, 0b100010100000111, V, 4},
        {"vlsseg6e8.v", VLSSEG6E8V, VLS, 0b0000111, 0b101010100000000, V, 4},
        {"vsseg6e8.v", VSSEG6E8V, VSS, 0b0100111, 0b101010100000000, V, 4},
        {"vlsseg6e16.v", VLSSEG6E16V, VLS, 0b0000111, 0b101010100000101, V, 4},
        {"vsseg6e16.v", VSSEG6E16V, VSS, 0b0100111, 0b101010100000101, V, 4},
        {"vlsseg6e32.v", VLSSEG6E32V, VLS, 0b0000111, 0b101010100000110, V, 4},
        {"vsseg6e32.v", VSSEG6E32V, VSS, 0b0100111, 0b101010100000110, V, 4},
        {"vlsseg6e64.v", VLSSEG6E64V, VLS, 0b0000111, 0b101010100000111, V, 4},
        {"vsseg6e64.v", VSSEG6E64V, VSS, 0b0100111, 0b101010100000111, V, 4},
        {"vlsseg7e8.v", VLSSEG7E8V, VLS, 0b0000111, 0b110010100000000, V, 4},
        {"vsseg7e8.v", VSSEG7E8V, VSS, 0b0100111, 0b110010100000000, V, 4},
        {"vlsseg7e16.v", VLSSEG7E16V, VLS, 0b0000111, 0b110010100000101, V, 4},
        {"vsseg7e16.v", VSSEG7E16V, VSS, 0b0100111, 0b110010100000101, V, 4},
        {"vlsseg7e32.v", VLSSEG7E32V, VLS, 0b0000111, 0b110010100000110, V, 4},
        {"vsseg7e32.v", VSSEG7E32V, VSS, 0b0100111, 0b110010100000110, V, 4},
        {"vlsseg7e64.v", VLSSEG7E64V, VLS, 0b0000111, 0b110010100000111, V, 4},
        {"vsseg7e64.v", VSSEG7E64V, VSS, 0b0100111, 0b110010100000111, V, 4},
        {"vlsseg8e8.v", VLSSEG8E8V, VLS, 0b0000111, 0b111010100000000, V, 4},
        {"vsseg8e8.v", VSSEG8E8V, VSS, 0b0100111, 0b111010100000000, V, 4},
        {"vlsseg8e16.v", VLSSEG8E16V, VLS, 0b0000111, 0b111010100000101, V, 4},
        {"vsseg8e16.v", VSSEG8E16V, VSS, 0b0100111, 0b111010100000101, V, 4},
        {"vlsseg8e32.v", VLSSEG8E32V, VLS, 0b0000111, 0b111010100000110, V, 4},
        {"vsseg8e32.v", VSSEG8E32V, VSS, 0b0100111, 0b111010100000110, V, 4},
        {"vlsseg8e64.v", VLSSEG8E64V, VLS, 0b0000111, 0b111010100000111, V, 4},
        {"vsseg8e64.v", VSSEG8E64V, VSS, 0b0100111, 0b111010100000111, V, 4},
        {"vluxseg2ei8.v", VLUXSEG2EI8V, VLX, 0b0000111, 0b0010011000, V, 4},
        {"vloxseg2ei8.v", VLOXSEG2EI8V, VLX, 0b0000111, 0b0010111000, V, 4},
        {"vsuxseg2ei8.v", VSUXSEG2EI8V, VSX, 0b0100111, 0b0010011000, V, 4},
        {"vsoxseg2ei8.v", VSOXSEG2EI8V, VSX, 0b0100111, 0b0010111000, V, 4},
        {"vluxseg2ei16.v", VLUXSEG2EI16V, VLX, 0b0000111, 0b0010011101, V, 4},
        {"vloxseg2ei16.v", VLOXSEG2EI16V, VLX, 0b0000111, 0b0010111101, V, 4},
        {"vsuxseg2ei16.v", VSUXSEG2EI16V, VSX, 0b0100111, 0b0010011101, V, 4},
        {"vsoxseg2ei16.v", VSOXSEG2EI16V, VSX, 0b0100111, 0b0010111101, V, 4},
        {"vluxseg2ei32.v", VLUXSEG2EI32V, VLX, 0b0000111, 0b0010011110, V, 4},
        {"vloxseg2ei32.v", VLOXSEG2EI32V, VLX, 0b0000111, 0b0010111110, V, 4},
        {"vsuxseg2ei32.v", VSUXSEG2EI32V, VSX, 0b0100111, 0b0010011110, V, 4},
        {"vsoxseg2ei32.v", VSOXSEG2EI32V, VSX, 0b0100111, 0b0010111110, V, 4},
        {"vluxseg2ei64.v", VLUXSEG2EI64V, VLX, 0b0000111, 0b0010011111, V, 4},
        {"vloxseg2ei64.v", VLOXSEG2EI64V, VLX, 0b0000111, 0b0010111111, V, 4},
        {"vsuxseg2ei64.v", VSUXSEG2EI64V, VSX, 0b0100111, 0b0010011111, V, 4},
        {"vsoxseg2ei64.v", VSOXSEG2EI64V, VSX, 0b0100111, 0b0010111111, V, 4},
        {"vluxseg3ei8.v", VLUXSEG3EI8V, VLX, 0b0000111, 0b0100011000, V, 4},
        {"vloxseg3ei8.v", VLOXSEG3EI8V, VLX, 0b0000111, 0b0100111000, V, 4},
        {"vsuxseg3ei8.v", VSUXSEG3EI8V, VSX, 0b0100111, 0b0100011000, V, 4},
        {"vsoxseg3ei8.v", VSOXSEG3EI8V, VSX, 0b0100111, 0b0100111000, V, 4},
        {"vluxseg3ei16.v", VLUXSEG3EI16V, VLX, 0b0000111, 0b0100011101, V, 4},
        {"vloxseg3ei16.v", VLOXSEG3EI16V, VLX, 0b0000111, 0b0100111101, V, 4},
        {"vsuxseg3ei16.v", VSUXSEG3EI16V, VSX, 0b0100111, 0b0100011101, V, 4},
        {"vsoxseg3ei16.v", VSOXSEG3EI16V, VSX, 0b0100111, 0b0100111101, V, 4},
        {"vluxseg3ei32.v", VLUXSEG3EI32V, VLX, 0b0000111, 0b0100011110, V, 4},
        {"vloxseg3ei32.v", VLOXSEG3EI32V, VLX, 0b0000111, 0b0100111110, V, 4},
        {"vsuxseg3ei32.v", VSUXSEG3EI32V, VSX, 0b0100111, 0b0100011110, V, 4},
        {"vsoxseg3ei32.v", VSOXSEG3EI32V, VSX, 0b0100111, 0b0100111110, V, 4},
        {"vluxseg3ei64.v", VLUXSEG3EI64V, VLX, 0b0000111, 0b0100011111, V, 4},
        {"vloxseg3ei64.v", VLOXSEG3EI64V, VLX, 0b0000111, 0b0100111111, V, 4},
        {"vsuxseg3ei64.v", VSUXSEG3EI64V, VSX, 0b0100111, 0b0100011111, V, 4},
        {"vsoxseg3ei64.v", VSOXSEG3EI64V, VSX, 0b0100111, 0b0100111111, V, 4},
        {"vluxseg4ei8.v", VLUXSEG4EI8V, VLX, 0b0000111, 0b0110011000, V, 4},
        {"vloxseg4ei8.v", VLOXSEG4EI8V, VLX, 0b0000111, 0b0110111000, V, 4},
        {"vsuxseg4ei8.v", VSUXSEG4EI8V, VSX, 0b0100111, 0b0110011000, V, 4},
        {"vsoxseg4ei8.v", VSOXSEG4EI8V, VSX, 0b0100111, 0b0110111000, V, 4},
        {"vluxseg4ei16.v", VLUXSEG4EI16V, VLX, 0b0000111, 0b0110011101, V, 4},
        {"vloxseg4ei16.v", VLOXSEG4EI16V, VLX, 0b0000111, 0b0110111101, V, 4},
        {"vsuxseg4ei16.v", VSUXSEG4EI16V, VSX, 0b0100111, 0b0110011101, V, 4},
        {"vsoxseg4ei16.v", VSOXSEG4EI16V, VSX, 0b0100111, 0b0110111101, V, 4},
        {"vluxseg4ei32.v", VLUXSEG4EI32V, VLX, 0b0000111, 0b0110011110, V, 4},
        {"vloxseg4ei32.v", VLOXSEG4EI32V, VLX, 0b0000111, 0b0110111110, V, 4},
        {"vsuxseg4ei32.v", VSUXSEG4EI32V, VSX, 0b0100111, 0b0110011110, V, 4},
        {"vsoxseg4ei32.v", VSOXSEG4EI32V, VSX, 0b0100111, 0b0110111110, V, 4},
        {"vluxseg4ei64.v", VLUXSEG4EI64V, VLX, 0b0000111, 0b0110011111, V, 4},
        {"vloxseg4ei64.v", VLOXSEG4EI64V, VLX, 0b0000111, 0b0110111111, V, 4},
        {"vsuxseg4ei64.v", VSUXSEG4EI64V, VSX, 0b0100111, 0b0110011111, V, 4},
        {"vsoxseg4ei64.v", VSOXSEG4EI64V, VSX, 0b0100111, 0b0110111111, V, 4},
        {"vluxseg5ei8.v", VLUXSEG5EI8V, VLX, 0b0000111, 0b1000011000, V, 4},
        {"vloxseg5ei8.v", VLOXSEG5EI8V, VLX, 0b0000111, 0b1000111000, V, 4},
        {"vsuxseg5ei8.v", VSUXSEG5EI8V, VSX, 0b0100111, 0b1000011000, V, 4},
        {"vsoxseg5ei8.v", VSOXSEG5EI8V, VSX, 0b0100111, 0b1000111000, V, 4},
        {"vluxseg5ei16.v", VLUXSEG5EI16V, VLX, 0b0000111, 0b1000011101, V, 4},
        {"vloxseg5ei16.v", VLOXSEG5EI16V, VLX, 0b0000111, 0b1000111101, V, 4},
        {"vsuxseg5ei16.v", VSUXSEG5EI16V, VSX, 0b0100111, 0b1000011101, V, 4},
        {"vsoxseg5ei16.v", VSOXSEG5EI16V, VSX, 0b0100111, 0b1000111101, V, 4},
        {"vluxseg5ei32.v", VLUXSEG5EI32V, VLX, 0b0000111, 0b1000011110, V, 4},
        {"vloxseg5ei32.v", VLOXSEG5EI32V, VLX, 0b0000111, 0b1000111110, V, 4},
        {"vsuxseg5ei32.v", VSUXSEG5EI32V, VSX, 0b0100111, 0b1000011110, V, 4},
        {"vsoxseg5ei32.v", VSOXSEG5EI32V, VSX, 0b0100111, 0b1000111110, V, 4},
        {"vluxseg5ei64.v", VLUXSEG5EI64V, VLX, 0b0000111, 0b1000011111, V, 4},
        {"vloxseg5ei64.v", VLOXSEG5EI64V, VLX, 0b0000111, 0b1000111111, V, 4},
        {"vsuxseg5ei64.v", VSUXSEG5EI64V, VSX, 0b0100111, 0b1000011111, V, 4},
        {"vsoxseg5ei64.v", VSOXSEG5EI64V, VSX, 0b0100111, 0b1000111111, V, 4},
        {"vluxseg6ei8.v", VLUXSEG6EI8V, VLX, 0b0000111, 0b1010011000, V, 4},
        {"vloxseg6ei8.v", VLOXSEG6EI8V, VLX, 0b0000111, 0b1010111000, V, 4},
        {"vsuxseg6ei8.v", VSUXSEG6EI8V, VSX, 0b0100111, 0b1010011000, V, 4},
        {"vsoxseg6ei8.v", VSOXSEG6EI8V, VSX, 0b0100111, 0b1010111000, V, 4},
        {"vluxseg6ei16.v", VLUXSEG6EI16V, VLX, 0b0000111, 0b1010011101, V, 4},
        {"vloxseg6ei16.v", VLOXSEG6EI16V, VLX, 0b0000111, 0b1010111101, V, 4},
        {"vsuxseg6ei16.v", VSUXSEG6EI16V, VSX, 0b0100111, 0b1010011101, V, 4},
        {"vsoxseg6ei16.v", VSOXSEG6EI16V, VSX, 0b0100111, 0b1010111101, V, 4},
        {"vluxseg6ei32.v", VLUXSEG6EI32V, VLX, 0b0000111, 0b1010011110, V, 4},
        {"vloxseg6ei32.v", VLOXSEG6EI32V, VLX, 0b0000111, 0b1010111110, V, 4},
        {"vsuxseg6ei32.v", VSUXSEG6EI32V, VSX, 0b0100111, 0b1010011110, V, 4},
        {"vsoxseg6ei32.v", VSOXSEG6EI32V, VSX, 0b0100111, 0b1010111110, V, 4},
        {"vluxseg6ei64.v", VLUXSEG6EI64V, VLX, 0b0000111, 0b1010011111, V, 4},
        {"vloxseg6ei64.v", VLOXSEG6EI64V, VLX, 0b0000111, 0b1010111111, V, 4},
        {"vsuxseg6ei64.v", VSUXSEG6EI64V, VSX, 0b0100111, 0b1010011111, V, 4},
        {"vsoxseg6ei64.v", VSOXSEG6EI64V, VSX, 0b0100111, 0b1010111111, V, 4},
        {"vluxseg7ei8.v", VLUXSEG7EI8V, VLX, 0b0000111, 0b1100011000, V, 4},
        {"vloxseg7ei8.v", VLOXSEG7EI8V, VLX, 0b0000111, 0b1100111000, V, 4},
        {"vsuxseg7ei8.v", VSUXSEG7EI8V, VSX, 0b0100111, 0b1100011000, V, 4},
        {"vsoxseg7ei8.v", VSOXSEG7EI8V, VSX, 0b0100111, 0b1100111000, V, 4},
        {"vluxseg7ei16.v", VLUXSEG7EI16V, VLX, 0b0000111, 0b1100011101, V, 4},
        {"vloxseg7ei16.v", VLOXSEG7EI16V, VLX, 0b0000111, 0b1100111101, V, 4},
        {"vsuxseg7ei16.v", VSUXSEG7EI16V, VSX, 0b0100111, 0b1100011101, V, 4},
        {"vsoxseg7ei16.v", VSOXSEG7EI16V, VSX, 0b0100111, 0b1100111101, V, 4},
        {"vluxseg7ei32.v", VLUXSEG7EI32V, VLX, 0b0000111, 0b1100011110, V, 4},
        {"vloxseg7ei32.v", VLOXSEG7EI32V, VLX, 0b0000111, 0b1100111110, V, 4},
        {"vsuxseg7ei32.v", VSUXSEG7EI32V, VSX, 0b0100111, 0b1100011110, V, 4},
        {"vsoxseg7ei32.v", VSOXSEG7EI32V, VSX, 0b0100111, 0b1100111110, V, 4},
        {"vluxseg7ei64.v", VLUXSEG7EI64V, VLX, 0b0000111, 0b1100011111, V, 4},
        {"vloxseg7ei64.v", VLOXSEG7EI64V, VLX, 0b0000111, 0b1100111111, V, 4},
        {"vsuxseg7ei64.v", VSUXSEG7EI64V, VSX, 0b0100111, 0b1100011111, V, 4},
        {"vsoxseg7ei64.v", VSOXSEG7EI64V, VSX, 0b0100111, 0b1100111111, V, 4},
        {"vluxseg8ei8.v", VLUXSEG8EI8V, VLX, 0b0000111, 0b1110011000, V, 4},
        {"vloxseg8ei8.v", VLOXSEG8EI8V, VLX, 0b0000111, 0b1110111000, V, 4},
        {"vsuxseg8ei8.v", VSUXSEG8EI8V, VSX, 0b0100111, 0b1110011000, V, 4},
        {"vsoxseg8ei8.v", VSOXSEG8EI8V, VSX, 0b0100111, 0b1110111000, V, 4},
        {"vluxseg8ei16.v", VLUXSEG8EI16V, VLX, 0b0000111, 0b1110011101, V, 4},
        {"vloxseg8ei16.v", VLOXSEG8EI16V, VLX, 0b0000111, 0b1110111101, V, 4},
        {"vsuxseg8ei16.v", VSUXSEG8EI16V, VSX, 0b0100111, 0b1110011101, V, 4},
        {"vsoxseg8ei16.v", VSOXSEG8EI16V, VSX, 0b0100111, 0b1110111101, V, 4},
        {"vluxseg8ei32.v", VLUXSEG8EI32V, VLX, 0b0000111, 0b1110011110, V, 4},
        {"vloxseg8ei32.v", VLOXSEG8EI32V, VLX, 0b0000111, 0b1110111110, V, 4},
        {"vsuxseg8ei32.v", VSUXSEG8EI32V, VSX, 0b0100111, 0b1110011110, V, 4},
        {"vsoxseg8ei32.v", VSOXSEG8EI32V, VSX, 0b0100111, 0b1110111110, V, 4},
        {"vluxseg8ei64.v", VLUXSEG8EI64V, VLX, 0b0000111, 0b1110011111, V, 4},
        {"vloxseg8ei64.v", VLOXSEG8EI64V, VLX, 0b0000111, 0b1110111111, V, 4},
        {"vsuxseg8ei64.v", VSUXSEG8EI64V, VSX, 0b0100111, 0b1110011111, V, 4},
        {"vsoxseg8ei64.v", VSOXSEG8EI64V, VSX, 0b0100111, 0b1110111111, V, 4},
        {"vl1re8.v", VL1RE8V, VLR, 0b0000111, 0b000000101000000, V, 4},
        {"vl1re16.v", VL1RE16V, VLR, 0b0000111, 0b000000101000101, V, 4},
        {"vl1re32.v", VL1RE32V, VLR, 0b0000111, 0b000000101000110, V, 4},
        {"vl1re64.v", VL1RE64V, VLR, 0b0000111, 0b000000101000111, V, 4},
        {"vl2re8.v", VL2RE8V, VLR, 0b0000111, 0b001000101000000, V, 4},
        {"vl2re16.v", VL2RE16V, VLR, 0b0000111, 0b001000101000101, V, 4},
        {"vl2re32.v", VL2RE32V, VLR, 0b0000111, 0b001000101000110, V, 4},
        {"vl2re64.v", VL2RE64V, VLR, 0b0000111, 0b001000101000111, V, 4},
        {"vl4re8.v", VL4RE8V, VLR, 0b0000111, 0b011000101000000, V, 4},
        {"vl4re16.v", VL4RE16V, VLR, 0b0000111, 0b011000101000101, V, 4},
        {"vl4re32.v", VL4RE32V, VLR, 0b0000111, 0b011000101000110, V, 4},
        {"vl4re64.v", VL4RE64V, VLR, 0b0000111, 0b011000101000111, V, 4},
        {"vl8re8.v", VL8RE8V, VLR, 0b0000111, 0b111000101000000, V, 4},
        {"vl8re16.v", VL8RE16V, VLR, 0b0000111, 0b111000101000101, V, 4},
        {"vl8re32.v", VL8RE32V, VLR, 0b0000111, 0b111000101000110, V, 4},
        {"vl8re64.v", VL8RE64V, VLR, 0b0000111, 0b111000101000111, V, 4},
        {"vs1r.v", VS1RV, VSR, 0b0100111, 0b000000101000000, V, 4},
        {"vs2r.v", VS2RV, VSR, 0b0100111, 0b001000101000000, V, 4},
        {"vs4r.v", VS4RV, VSR, 0b0100111, 0b011000101000000, V, 4},
        {"vs8r.v", VS8RV, VSR, 0b0100111, 0b111000101000000, V, 4},
        {"vadd.vv", VADDVV, IVV, 0b1010111, 0b0000001000, V, 4},
        {"vadd.vx", VADDVX, IVX, 0b1010111, 0b0000001100, V, 4},
        {"vadd.vi", VADDVI, IVI, 0b1010111, 0b0000001011, V, 4},
        {"vsub.vv", VSUBVV, IVV, 0b1010111, 0b0000101000, V, 4},
        {"vsub.vx", VSUBVX, IVX, 0b1010111, 0b0000101100, V, 4},
        {"vrsub.vx", VRSUBVX, IVX, 0b1010111, 0b0000111100, V, 4},
        {"vrsub.vi", VRSUBVI, IVI, 0b1010111, 0b0000111011, V, 4},
        {"vwaddu.vv", VWADDUVV, IVV, 0b1010111, 0b1100001000, V, 4},
        {"vwaddu.vx", VWADDUVX, IVX, 0b1010111, 0b1100001100, V, 4},
        {"vwsubu.vv", VWSUBUVV, IVV, 0b1010111, 0b1100101000, V, 4},
        {"vwsubu.vx", VWSUBUVX, IVX, 0b1010111, 0b1100101100, V, 4},
        {"vwadd.vv", VWADDVV, IVV, 0b1010111, 0b1100011000, V, 4},
        {"vwadd.vx", VWADDVX, IVX, 0b1010111, 0b1100011100, V, 4},
        {"vwsub.vv", VWSUBVV, IVV, 0b1010111, 0b1100111000, V, 4},
        {"vwsub.vx", VWSUBVX, IVX, 0b1010111, 0b1100111100, V, 4},
        {"vwaddu.wv", VWADDUWV, IVV, 0b1010111, 0b1101001000, V, 4},
        {"vwaddu.wx", VWADDUWX, IVX, 0b1010111, 0b1101001100, V, 4},
        {"vwsubu.wv", VWSUBUWV, IVV, 0b1010111, 0b1101101000, V, 4},
        {"vwsubu.wx", VWSUBUWX, IVX, 0b1010111, 0b1101101100, V, 4},
        {"vwadd.wv", VWADDWV, IVV, 0b1010111, 0b1101011000, V, 4},
        {"vwadd.wx", VWADDWX, IVX, 0b1010111, 0b1101011100, V, 4},
        {"vwsub.wv", VWSUBWV, IVV, 0b1010111, 0b1101111000, V, 4},
        {"vwsub.wx", VWSUBWX, IVX, 0b1010111, 0b1101111100, V, 4},
        {"vzext.vf2", VZEXTVF2, IVV, 0b1010111, 0b0100101000, V, 4, {.custom_reg_val = 0b00110}},
        {"vsext.vf2", VSEXTVF2, IVV, 0b1010111, 0b0100101000, V, 4, {.custom_reg_val = 0b00111}},
        {"vzext.vf4", VZEXTVF4, IVV, 0b1010111, 0b0100101000, V, 4, {.custom_reg_val = 0b00100}},
        {"vsext.vf4", VSEXTVF4, IVV, 0b1010111, 0b0100101000, V, 4, {.custom_reg_val = 0b00101}},
        {"vzext.vf8", VZEXTVF8, IVV, 0b1010111, 0b0100101000, V, 4, {.custom_reg_val = 0b00010}},
        {"vsext.vf8", VSEXTVF8, IVV, 0b1010111, 0b0100101000, V, 4, {.custom_reg_val = 0b00011}},
        {"vadc.vvm", VADCVVM, MVV, 0b1010111, 0b0100001010, V, 4},
        {"vadc.vxm", VADCVXM, MVX, 0b1010111, 0b0100001110, V, 4},
        {"vadc.vim", VADCVIM, IVI, 0b1010111, 0b0100001011, V, 4},
        {"vmadc.vvm", VMADCVVM, MVV, 0b1010111, 0b0100011010, V, 4},
        {"vmadc.vxm", VMADCVXM, MVX, 0b1010111, 0b0100011110, V, 4},
        {"vmadc.vim", VMADCVIM, IVI, 0b1010111, 0b0100011011, V, 4},
        {"vmadc.vv", VMADCVV, IVV, 0b1010111, 0b0100011000, V, 4},
        {"vmadc.vx", VMADCVX, IVX, 0b1010111, 0b0100011100, V, 4},
        {"vmadc.vi", VMADCVI, IVI, 0b1010111, 0b0100011011, V, 4},
        {"vsbc.vvm", VSBCVVM, MVV, 0b1010111, 0b0100101010, V, 4},
        {"vsbc.vxm", VSBCVXM, MVX, 0b1010111, 0b0100101110, V, 4},
        {"vmsbc.vvm", VMSBCVVM, MVV, 0b1010111, 0b0100111010, V, 4},
        {"vmsbc.vxm", VMSBCVXM, MVX, 0b1010111, 0b0100111110, V, 4},
        {"vmsbc.vv", VMSBCVV, IVV, 0b1010111, 0b0100111000, V, 4},
        {"vmsbc.vx", VMSBCVX, IVX, 0b1010111, 0b0100111100, V, 4},
        {"vand.vv", VANDVV, IVV, 0b1010111, 0b0010011000, V, 4},
        {"vand.vx", VANDVX, IVX, 0b1010111, 0b0010011100, V, 4},
        {"vand.vi", VANDVI, IVI, 0b1010111, 0b0010011011, V, 4},
        {"vor.vv", VORVV, IVV, 0b1010111, 0b0010101000, V, 4},
        {"vor.vx", VORVX, IVX, 0b1010111, 0b0010101100, V, 4},
        {"vor.vi", VORVI, IVI, 0b1010111, 0b0010101011, V, 4},
        {"vxor.vv", VXORVV, IVV, 0b1010111, 0b0010111000, V, 4},
        {"vxor.vx", VXORVX, IVX, 0b1010111, 0b0010111100, V, 4},
        {"vxor.vi", VXORVI, IVI, 0b1010111, 0b0010111011, V, 4},
        {"vsll.vv", VSLLVV, IVV, 0b1010111, 0b1001011000, V, 4},
        {"vsll.vx", VSLLVX, IVX, 0b1010111, 0b1001011100, V, 4},
        {"vsll.vi", VSLLVI, IVI, 0b1010111, 0b1001011011, V, 4},
        {"vsrl.vv", VSRLVV, IVV, 0b1010111, 0b1010001000, V, 4},
        {"vsrl.vx", VSRLVX, IVX, 0b1010111, 0b1010001100, V, 4},
        {"vsrl.vi", VSRLVI, IVI, 0b1010111, 0b1010001011, V, 4},
        {"vsra.vv", VSRAVV, IVV, 0b1010111, 0b1010011000, V, 4},
        {"vsra.vx", VSRAVX, IVX, 0b1010111, 0b1010011100, V, 4},
        {"vsra.vi", VSRAVI, IVI, 0b1010111, 0b1010011011, V, 4},
        {"vnsrl.wv", VNSRLWV, IVV, 0b1010111, 0b1011001000, V, 4},
        {"vnsrl.wx", VNSRLWX, IVX, 0b1010111, 0b1011001100, V, 4},
        {"vnsrl.wi", VNSRLWI, IVI, 0b1010111, 0b1011001011, V, 4},
        {"vnsra.wv", VNSRAWV, IVV, 0b1010111, 0b1011011000, V, 4},
        {"vnsra.wx", VNSRAWX, IVX, 0b1010111, 0b1011011100, V, 4},
        {"vnsra.wi", VNSRAWI, IVI, 0b1010111, 0b1011011011, V, 4},
        {"vmseq.vv", VMSEQVV, IVV, 0b1010111, 0b0110001000, V, 4},
        {"vmseq.vx", VMSEQVX, IVX, 0b1010111, 0b0110001100, V, 4},
        {"vmseq.vi", VMSEQVI, IVI, 0b1010111, 0b0110001011, V, 4},
        {"vmsne.vv", VMSNEVV, IVV, 0b1010111, 0b0110011000, V, 4},
        {"vmsne.vx", VMSNEVX, IVX, 0b1010111, 0b0110011100, V, 4},
        {"vmsne.vi", VMSNEVI, IVI, 0b1010111, 0b0110011011, V, 4},
        {"vmsltu.vv", VMSLTUVV, IVV, 0b1010111, 0b0110101000, V, 4},
        {"vmsltu.vx", VMSLTUVX, IVX, 0b1010111, 0b0110101100, V, 4},
        {"vmslt.vv", VMSLTVV, IVV, 0b1010111, 0b0110111000, V, 4},
        {"vmslt.vx", VMSLTVX, IVX, 0b1010111, 0b0110111100, V, 4},
        {"vmsleu.vv", VMSLEUVV, IVV, 0b1010111, 0b0111001000, V, 4},
        {"vmsleu.vx", VMSLEUVX, IVX, 0b1010111, 0b0111001100, V, 4},
        {"vmsleu.vi", VMSLEUVI, IVI, 0b1010111, 0b0111001011, V, 4},
        {"vmsle.vv", VMSLEVV, IVV, 0b1010111, 0b0111011000, V, 4},
        {"vmsle.vx", VMSLEVX, IVX, 0b1010111, 0b0111011100, V, 4},
        {"vmsle.vi", VMSLEVI, IVI, 0b1010111, 0b0111011011, V, 4},
        {"vmsgtu.vx", VMSGTUVX, IVX, 0b1010111, 0b0111101100, V, 4},
        {"vmsgtu.vi", VMSGTUVI, IVI, 0b1010111, 0b0111101011, V, 4},
        {"vmsgt.vx", VMSGTVX, IVX, 0b1010111, 0b0111111100, V, 4},
        {"vmsgt.vi", VMSGTVI, IVI, 0b1010111, 0b0111111011, V, 4},
        {"vminu.vv", VMINUVV, IVV, 0b1010111, 0b0001001000, V, 4},
        {"vminu.vx", VMINUVX, IVX, 0b1010111, 0b0001001100, V, 4},
        {"vmin.vv", VMINVV, IVV, 0b1010111, 0b0001011000, V, 4},
        {"vmin.vx", VMINVX, IVX, 0b1010111, 0b0001011100, V, 4},
        {"vmaxu.vv", VMAXUVV, IVV, 0b1010111, 0b0001101000, V, 4},
        {"vmaxu.vx", VMAXUVX, IVX, 0b1010111, 0b0001101100, V, 4},
        {"vmax.vv", VMAXVV, IVV, 0b1010111, 0b0001111000, V, 4},
        {"vmax.vx", VMAXVX, IVX, 0b1010111, 0b0001111100, V, 4},
        {"vmul.vv", VMULVV, IVV, 0b1010111, 0b1001011000, V, 4},
        {"vmul.vx", VMULVX, IVX, 0b1010111, 0b1001011100, V, 4},
        {"vmulh.vv", VMULHVV, IVV, 0b1010111, 0b1001111000, V, 4},
        {"vmulh.vx", VMULHVX, IVX, 0b1010111, 0b1001111100, V, 4},
        {"vmulhu.vv", VMULHUVV, IVV, 0b1010111, 0b1001001000, V, 4},
        {"vmulhu.vx", VMULHUVX, IVX, 0b1010111, 0b1001001100, V, 4},
        {"vmulhsu.vv", VMULHSUVV, IVV, 0b1010111, 0b1001101000, V, 4},
        {"vmulhsu.vx", VMULHSUVX, IVX, 0b1010111, 0b1001101100, V, 4},
        {"vdivu.vv", VDIVUVV, IVV, 0b1010111, 0b1000001000, V, 4},
        {"vdivu.vx", VDIVUVX, IVX, 0b1010111, 0b1000001100, V, 4},
        {"vdiv.vv", VDIVVV, IVV, 0b1010111, 0b1000011000, V, 4},
        {"vdiv.vx", VDIVVX, IVX, 0b1010111, 0b1000011100, V, 4},
        {"vremu.vv", VREMUVV, IVV, 0b1010111, 0b1000101000, V, 4},
        {"vremu.vx", VREMUVX, IVX, 0b1010111, 0b1000101100, V, 4},
        {"vrem.vv", VREMVV, IVV, 0b1010111, 0b1000111000, V, 4},
        {"vrem.vx", VREMVX, IVX, 0b1010111, 0b1000111100, V, 4},
        {"vwmul.vv", VWMULVV, IVV, 0b1010111, 0b1110111000, V, 4},
        {"vwmul.vx", VWMULVX, IVX, 0b1010111, 0b1110111100, V, 4},
        {"vwmulu.vv", VWMULUVV, IVV, 0b1010111, 0b1110001000, V, 4},
        {"vwmulu.vx", VWMULUVX, IVX, 0b1010111, 0b1110001100, V, 4},
        {"vwmulsu.vv", VWMULSUVV, IVV, 0b1010111, 0b1110101000, V, 4},
        {"vwmulsu.vx", VWMULSUVX, IVX, 0b1010111, 0b1110101100, V, 4},
        {"vmacc.vv", VMACCVV, IVV, 0b1010111, 0b1011011000, V, 4},
        {"vmacc.vx", VMACCVX, IVX, 0b1010111, 0b1011011100, V, 4},
        {"vnmsac.vv", VNMSACVV, IVV, 0b1010111, 0b1011111000, V, 4},
        {"vnmsac.vx", VNMSACVX, IVX, 0b1010111, 0b1011111100, V, 4},
        {"vmadd.vv", VMADDVV, IVV, 0b1010111, 0b1010011000, V, 4},
        {"vmadd.vx", VMADDVX, IVX, 0b1010111, 0b1010011100, V, 4},
        {"vnmsub.vv", VNMSUBVV, IVV, 0b1010111, 0b1010111000, V, 4},
        {"vnmsub.vx", VNMSUBVX, IVX, 0b1010111, 0b1010111100, V, 4},
        {"vwmaccu.vv", VWMACCUVV, IVV, 0b1010111, 0b1111001000, V, 4},
        {"vwmaccu.vx", VWMACCUVX, IVX, 0b1010111, 0b1111001100, V, 4},
        {"vwmacc.vv", VWMACCVV, IVV, 0b1010111, 0b1111011000, V, 4},
        {"vwmacc.vx", VWMACCVX, IVX, 0b1010111, 0b1111011100, V, 4},
        {"vwmaccsu.vv", VWMACCSUVV, IVV, 0b1010111, 0b1111111000, V, 4},
        {"vwmaccsu.vx", VWMACCSUVX, IVX, 0b1010111, 0b1111111100, V, 4},
        {"vwmaccus.vx", VWMACCUSVX, IVX, 0b1010111, 0b1111101100, V, 4},
        {"vmerge.vvm", VMERGEVVM, MVV, 0b1010111, 0b0101111010, V, 4},
        {"vmerge.vxm", VMERGEVXM, MVX, 0b1010111, 0b0101111110, V, 4},
        {"vmerge.vim", VMERGEVIM, IVI, 0b1010111, 0b0101111011, V, 4},
        {"vmv.v.v", VMVVV, IVV, 0b1010111, 0b0101111000, V, 4, {.custom_reg_val = 0b00000}},
        {"vmv.v.x", VMVVX, IVX, 0b1010111, 0b0101111100, V, 4, {.custom_reg_val = 0b00000}},
        {"vmv.v.i", VMVVI, IVI, 0b1010111, 0b0101111011, V, 4, {.custom_reg_val = 0b00000}},
        {"vsaddu.vv", VSADDUVV, IVV, 0b1010111, 0b1000001000, V, 4},
        {"vsaddu.vx", VSADDUVX, IVX, 0b1010111, 0b1000001100, V, 4},
        {"vsaddu.vi", VSADDUVI, IVI, 0b1010111, 0b1000001011, V, 4},
        {"vsadd.vv", VSADDVV, IVV, 0b1010111, 0b1000011000, V, 4},
        {"vsadd.vx", VSADDVX, IVX, 0b1010111, 0b1000011100, V, 4},
        {"vsadd.vi", VSADDVI, IVI, 0b1010111, 0b1000011011, V, 4},
        {"vssubu.vv", VSSUBUVV, IVV, 0b1010111, 0b1000101000, V, 4},
        {"vssubu.vx", VSSUBUVX, IVX, 0b1010111, 0b1000101100, V, 4},
        {"vssub.vv", VSSUBVV, IVV, 0b1010111, 0b1000111000, V, 4},
        {"vssub.vx", VSSUBVX, IVX, 0b1010111, 0b1000111100, V, 4},
        {"vaaddu.vv", VAADDUVV, IVV, 0b1010111, 0b0010001000, V, 4},
        {"vaaddu.vx", VAADDUVX, IVX, 0b1010111, 0b0010001100, V, 4},
        {"vaadd.vv", VAADDVV, IVV, 0b1010111, 0b0010011000, V, 4},
        {"vaadd.vx", VAADDVX, IVX, 0b1010111, 0b0010011100, V, 4},
        {"vasubu.vv", VASUBUVV, IVV, 0b1010111, 0b0010101000, V, 4},
        {"vasubu.vx", VASUBUVX, IVX, 0b1010111, 0b0010101100, V, 4},
        {"vasub.vv", VASUBVV, IVV, 0b1010111, 0b0010111000, V, 4},
        {"vasub.vx", VASUBVX, IVX, 0b1010111, 0b0010111100, V, 4},
        {"vsmul.vv", VSMULVV, IVV, 0b1010111, 0b1001111000, V, 4},
        {"vsmul.vx", VSMULVX, IVX, 0b1010111, 0b1001111100, V, 4},
        {"vssrl.vv", VSSRLVV, IVV, 0b1010111, 0b1010101000, V, 4},
        {"vssrl.vx", VSSRLVX, IVX, 0b1010111, 0b1010101100, V, 4},
        {"vssrl.vi", VSSRLVI, IVI, 0b1010111, 0b1010101011, V, 4},
        {"vssra.vv", VSSRAVV, IVV, 0b1010111, 0b1010111000, V, 4},
        {"vssra.vx", VSSRAVX, IVX, 0b1010111, 0b1010111100, V, 4},
        {"vssra.vi", VSSRAVI, IVI, 0b1010111, 0b1010111011, V, 4},
        {"vnclipu.wv", VNCLIPUWV, IVV, 0b1010111, 0b1011101000, V, 4},
        {"vnclipu.wx", VNCLIPUWX, IVX, 0b1010111, 0b1011101100, V, 4},
        {"vnclipu.wi", VNCLIPUWI, IVI, 0b1010111, 0b1011101011, V, 4},
        {"vnclip.wv", VNCLIPWV, IVV, 0b1010111, 0b1011111000, V, 4},
        {"vnclip.wx", VNCLIPWX, IVX, 0b1010111, 0b1011111100, V, 4},
        {"vnclip.wi", VNCLIPWI, IVI, 0b1010111, 0b1011111011, V, 4},
        {"vfadd.vv", VFADDVV, FVV, 0b1010111, 0b0000001001, V, 4},
        {"vfadd.vf", VFADDVF, FVF, 0b1010111, 0b0000001101, V, 4},
        {"vfsub.vv", VFSUBVV, FVV, 0b1010111, 0b0000101001, V, 4},
        {"vfsub.vf", VFSUBVF, FVF, 0b1010111, 0b0000101101, V, 4},
        {"vfrsub.vf", VFRSUBVF, FVF, 0b1010111, 0b1001111101, V, 4},
        {"vfwadd.vv", VFWADDVV, FVV, 0b1010111, 0b1100001001, V, 4},
        {"vfwadd.vf", VFWADDVF, FVF, 0b1010111, 0b1100001101, V, 4},
        {"vfwsub.vv", VFWSUBVV, FVV, 0b1010111, 0b1100101001, V, 4},
        {"vfwsub.vf", VFWSUBVF, FVF, 0b1010111, 0b1100101101, V, 4},
        {"vfwadd.wv", VFWADDWV, FVV, 0b1010111, 0b1101001001, V, 4},
        {"vfwadd.wf", VFWADDWF, FVF, 0b1010111, 0b1101001101, V, 4},
        {"vfwsub.wv", VFWSUBWV, FVV, 0b1010111, 0b1101101001, V, 4},
        {"vfwsub.wf", VFWSUBWF, FVF, 0b1010111, 0b1101101101, V, 4},
        {"vfmul.vv", VFMULVV, FVV, 0b1010111, 0b1001001001, V, 4},
        {"vfmul.vf", VFMULVF, FVF, 0b1010111, 0b1001001101, V, 4},
        {"vfdiv.vv", VFDIVVV, FVV, 0b1010111, 0b1000001001, V, 4},
        {"vfdiv.vf", VFDIVVF, FVF, 0b1010111, 0b1000001101, V, 4},
        {"vfrdiv.vf", VFRDIVVF, FVF, 0b1010111, 0b1000011101, V, 4},
        {"vfwmul.vv", VFWMULVV, FVV, 0b1010111, 0b1110001001, V, 4},
        {"vfwmul.vf", VFWMULVF, FVF, 0b1010111, 0b1110001101, V, 4},
        {"vfmacc.vv", VFMACCVV, FVV, 0b1010111, 0b1011001001, V, 4},
        {"vfmacc.vf", VFMACCVF, FVF, 0b1010111, 0b1011001101, V, 4},
        {"vfnmacc.vv", VFNMACCVV, FVV, 0b1010111, 0b1011011001, V, 4},
        {"vfnmacc.vf", VFNMACCVF, FVF, 0b1010111, 0b1011011101, V, 4},
        {"vfmsac.vv", VFMSACVV, FVV, 0b1010111, 0b1011101001, V, 4},
        {"vfmsac.vf", VFMSACVF, FVF, 0b1010111, 0b1011101101, V, 4},
        {"vfnmsac.vv", VFNMSACVV, FVV, 0b1010111, 0b1011111001, V, 4},
        {"vfnmsac.vf", VFNMSACVF, FVF, 0b1010111, 0b1011111101, V, 4},
        {"vfmadd.vv", VFMADDVV, FVV, 0b1010111, 0b1010001001, V, 4},
        {"vfmadd.vf", VFMADDVF, FVF, 0b1010111, 0b1010001101, V, 4},
        {"vfnmadd.vv", VFNMADDVV, FVV, 0b1010111, 0b1010011001, V, 4},
        {"vfnmadd.vf", VFNMADDVF, FVF, 0b1010111, 0b1010011101, V, 4},
        {"vfmsub.vv", VFMSUBVV, FVV, 0b1010111, 0b1010101001, V, 4},
        {"vfmsub.vf", VFMSUBVF, FVF, 0b1010111, 0b1010101101, V, 4},
        {"vfnmsub.vv", VFNMSUBVV, FVV, 0b1010111, 0b1010111001, V, 4},
        {"vfnmsub.vf", VFNMSUBVF, FVF, 0b1010111, 0b1010111101, V, 4},
        {"vfsqrt.v", VFSQRTV, FVV, 0b1010111, 0b0100111001, V, 4, {.custom_reg_val = 0b00000}},
        {"vfrsqrt7.v", VFRSQRT7V, FVV, 0b1010111, 0b0100111001, V, 4, {.custom_reg_val = 0b00100}},
        {"vfrec7.v", VFREC7V, FVV, 0b1010111, 0b0100111001, V, 4, {.custom_reg_val = 0b00101}},
        {"vfmin.vv", VFMINVV, FVV, 0b1010111, 0b0001001001, V, 4},
        {"vfmin.vf", VFMINVF, FVF, 0b1010111, 0b0001001101, V, 4},
        {"vfmax.vv", VFMAXVV, FVV, 0b1010111, 0b0001101001, V, 4},
        {"vfmax.vf", VFMAXVF, FVF, 0b1010111, 0b0001101101, V, 4},
        {"vfsgnj.vv", VFSGNJVV, FVV, 0b1010111, 0b0010001001, V, 4},
        {"vfsgnj.vf", VFSGNJVF, FVF, 0b1010111, 0b0010001101, V, 4},
        {"vfsgnjn.vv", VFSGNJNVV, FVV, 0b1010111, 0b0010011001, V, 4},
        {"vfsgnjn.vf", VFSGNJNVF, FVF, 0b1010111, 0b0010011101, V, 4},
        {"vfsgnjx.vv", VFSGNJXVV, FVV, 0b1010111, 0b0010101001, V, 4},
        {"vfsgnjx.vf", VFSGNJXVF, FVF, 0b1010111, 0b0010101101, V, 4},
        {"vmfeq.vv", VMFEQVV, FVV, 0b1010111, 0b0110001001, V, 4},
        {"vmfeq.vf", VMFEQVF, FVF, 0b1010111, 0b0110001101, V, 4},
        {"vmfne.vv", VMFNEVV, FVV, 0b1010111, 0b0111001001, V, 4},
        {"vmfne.vf", VMFNEVF, FVF, 0b1010111, 0b0111001101, V, 4},
        {"vmflt.vv", VMFLTVV, FVV, 0b1010111, 0b0110111001, V, 4},
        {"vmflt.vf", VMFLTVF, FVF, 0b1010111, 0b0110111101, V, 4},
        {"vmfle.vv", VMFLEVV, FVV, 0b1010111, 0b0110011001, V, 4},
        {"vmfle.vf", VMFLEVF, FVF, 0b1010111, 0b0110011101, V, 4},
        {"vmfgt.vf", VMFGTVF, FVF, 0b1010111, 0b0111011101, V, 4},
        {"vmfge.vf", VMFGEVF, FVF, 0b1010111, 0b0111111101, V, 4},
        {"vfclass.v", VFCLASSV, FVV, 0b1010111, 0b0100111001, V, 4, {.custom_reg_val = 0b10000}},
        {"vfmerge.vfm", VFMERGEVFM, FVF, 0b1010111, 0b0101111101, V, 4},
        {"vfmv.v.f", VFMVVF, FVF, 0b1010111, 0b0101111101, V, 4, {.custom_reg_val = 0b00000}},
        {"vfcvt.xu.f.v", VFCVTXUFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b00000}},
        {"vfcvt.x.f.v", VFCVTXFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b00001}},
        {"vfcvt.rtz.xu.f.v", VFCVTRTZXUFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b00110}},
        {"vfcvt.rtz.x.f.v", VFCVTRTZXFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b00111}},
        {"vfcvt.f.xu.v", VFCVTFXUV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b00010}},
        {"vfcvt.f.x.v", VFCVTFXV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b00011}},
        {"vfwcvt.xu.f.v", VFWCVTXUFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b01000}},
        {"vfwcvt.x.f.v", VFWCVTXFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b01001}},
        {"vfwcvt.rtz.xu.f.v", VFWCVTRTZXUFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b01110}},
        {"vfwcvt.rtz.x.f.v", VFWCVTRTZXFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b01111}},
        {"vfwcvt.f.xu.v", VFWCVTFXUV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b01010}},
        {"vfwcvt.f.x.v", VFWCVTFXV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b01011}},
        {"vfwcvt.f.f.v", VFWCVTFFV, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b01100}},
        {"vfncvt.xu.f.w", VFNCVTXUFW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10000}},
        {"vfncvt.x.f.w", VFNCVTXFW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10001}},
        {"vfncvt.rtz.xu.f.w", VFNCVTRTZXUFW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10110}},
        {"vfncvt.rtz.x.f.w", VFNCVTRTZXFW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10111}},
        {"vfncvt.f.xu.w", VFNCVTFXUW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10010}},
        {"vfncvt.f.x.w", VFNCVTFXW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10011}},
        {"vfncvt.f.f.w", VFNCVTFFW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10100}},
        {"vfncvt.rod.f.f.w", VFNCVTRODFFW, FVV, 0b1010111, 0b0100101001, V, 4, {.custom_reg_val = 0b10101}},
        {"vredsum.vs", VREDSUMVS, MVV, 0b1010111, 0b0000001010, V, 4},
        {"vredmaxu.vs", VREDMAXUVS, MVV, 0b1010111, 0b00011010010, V, 4},
        {"vredmax.vs", VREDMAXVS, MVV, 0b1010111, 0b0001111010, V, 4},
        {"vredminu.vs", VREDMINUVS, MVV, 0b1010111, 0b0001001010, V, 4},
        {"vredmin.vs", VREDMINVS, MVV, 0b1010111, 0b0001011010, V, 4},
        {"vredand.vs", VREDANDVS, MVV, 0b1010111, 0b0000011010, V, 4},
        {"vredor.vs", VREDORVS, MVV, 0b1010111, 0b0000101010, V, 4},
        {"vredxor.vs", VREDXORVS, MVV, 0b1010111, 0b0000111010, V, 4},
        {"vwredsumu.vs", VWREDSUMUVS, IVV, 0b1010111, 0b1100001000, V, 4},
        {"vwredsum.vs", VWREDSUMVS, IVV, 0b1010111, 0b1100011000, V, 4},
        {"vfredosum.vs", VFREDOSUMVS, FVV, 0b1010111, 0b0000111001, V, 4},
        {"vfredusum.vs", VFREDUSUMVS, FVV, 0b1010111, 0b0000011001, V, 4},
        {"vfredmax.vs", VFREDMAXVS, FVV, 0b1010111, 0b0001111001, V, 4},
        {"vfredmin.vs", VFREDMINVS, FVV, 0b1010111, 0b0001011001, V, 4},
        {"vfwredosum.vs", VFWREDOSUMVS, FVV, 0b1010111, 0b1100111001, V, 4},
        {"vfwredusum.vs", VFWREDUSUMVS, FVV, 0b1010111, 0b1100011001, V, 4},
        {"vmand.mm", VMANDMM, MVV, 0b1010111, 0b0110011010, V, 4},
        {"vmnand.mm", VMNANDMM, MVV, 0b1010111, 0b0111011010, V, 4},
        {"vmandn.mm", VMANDNMM, MVV, 0b1010111, 0b0110001010, V, 4},
        {"vmxor.mm", VMXORMM, MVV, 0b1010111, 0b0110111010, V, 4},
        {"vmor.mm", VMORMM, MVV, 0b1010111, 0b0110101010, V, 4},
        {"vmnor.mm", VMNORMM, MVV, 0b1010111, 0b0111101010, V, 4},
        {"vmorn.mm", VMORNMM, MVV, 0b1010111, 0b0111001010, V, 4},
        {"vmxnor.mm", VMXNORMM, MVV, 0b1010111, 0b0111111010, V, 4},
        {"vcpop.m", VCPOPM, MVV, 0b1010111, 0b0100001010, V, 4, {.custom_reg_val = 0b10000}},
        {"vfirst.m", VFIRSTM, MVV, 0b1010111, 0b0100001010, V, 4, {.custom_reg_val = 0b10001}},
        {"vmsbf.m", VMSBFM, MVV, 0b1010111, 0b0101001010, V, 4, {.custom_reg_val = 0b00001}},
        {"vmsif.m", VMSIFM, MVV, 0b1010111, 0b0101001010, V, 4, {.custom_reg_val = 0b00011}},
        {"vmsof.m", VMSOFM, MVV, 0b1010111, 0b0101001010, V, 4, {.custom_reg_val = 0b00010}},
        {"viota.m", VIOTAM, MVV, 0b1010111, 0b0101001010, V, 4, {.custom_reg_val = 0b10000}},
        {"vid.v", VIDV, MVV, 0b1010111, 0b0101001010, V, 4, {.custom_reg_val = 0b10001}},
        {"vmv.x.s", VMVXS, MVV, 0b1010111, 0b0101001010, V, 4, {.custom_reg_val = 0b00000}},
        {"vmv.s.x", VMVSX, MVX, 0b1010111, 0b0100001110, V, 4, {.custom_reg_val = 0b00000}},
        {"vfmv.f.s", VFMVFS, FVV, 0b1010111, 0b0100001001, V, 4, {.custom_reg_val = 0b00000}},
        {"vfmv.s.f", VFMVSF, FVF, 0b1010111, 0b0100001101, V, 4, {.custom_reg_val = 0b00000}},
        {"vslideup.vx", VSLIDEUPVX, IVX, 0b1010111, 0b0011101100, V, 4},
        {"vslideup.vi", VSLIDEUPVI, IVI, 0b1010111, 0b0011101011, V, 4},
        {"vslidedown.vx", VSLIDEDOWNVX, IVX, 0b1010111, 0b0011111100, V, 4},
        {"vslidedown.vi", VSLIDEDOWNVI, IVI, 0b1010111, 0b0011111011, V, 4},
        {"vslide1up.vx", VSLIDE1UPVX, MVX, 0b1010111, 0b0011101110, V, 4},
        {"vfslide1up.vf", VFSLIDE1UPVF, FVF, 0b1010111, 0b0011101101, V, 4},
        {"vslide1down.vx", VSLIDE1DOWNVX, MVX, 0b1010111, 0b0011111110, V, 4},
        {"vfslide1down.vf", VFSLIDE1DOWNVF, FVF, 0b1010111, 0b0011111101, V, 4},
        {"vrgather.vv", VRGATHERVV, IVV, 0b1010111, 0b0011001000, V, 4},
        {"vrgatherei16.vv", VRGATHEREI16VV, IVV, 0b1010111, 0b0011101000, V, 4},
        {"vrgather.vx", VRGATHERVX, IVX, 0b1010111, 0b0011001100, V, 4},
        {"vrgather.vi", VRGATHERVI, IVI, 0b1010111, 0b0011001011, V, 4},
        {"vcompress.vm", VCOMPRESSVM, MVV, 0b1010111, 0b0101111010, V, 4},
        {"vmv1r.v", VMV1RV, IVV, 0b1010111, 0b1001111011, V, 4, {.custom_reg_val = 0b00000}}, // Actually IVI, but we just need a custom rs1 value
        {"vmv2r.v", VMV2RV, IVV, 0b1010111, 0b1001111011, V, 4, {.custom_reg_val = 0b00001}},
        {"vmv4r.v", VMV4RV, IVV, 0b1010111, 0b1001111011, V, 4, {.custom_reg_val = 0b00011}},
        {"vmv8r.v", VMV8RV, IVV, 0b1010111, 0b1001111011, V, 4, {.custom_reg_val = 0b00111}}}};

} // namespace libchata_internal